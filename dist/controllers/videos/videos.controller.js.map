{"version":3,"sources":["../../../src/controllers/videos/videos.controller.ts"],"sourcesContent":["import { VideosService } from '@/services/videos/videos.service';\nimport { Request, Response } from 'express';\nexport class VideosController {\n  // add videos\n\n  public static async addVideos(req: Request, res: Response) {\n    try {\n      const addVideos = await VideosService.addVideos(req.body);\n\n      if (addVideos == 'videos already exist') {\n        res.status(400).json({\n          message: 'videos already exist',\n        });\n      }\n      res.send(addVideos);\n    } catch (err) {\n      res.status(500).send('Internal Server Error');\n    }\n  }\n  //   get all videos\n  public static async getAllVideos(req: Request, res: Response) {\n    try {\n      const getAllVideos = await VideosService.getVideos();\n      res.send(getAllVideos);\n    } catch (err) {\n      res.status(500).send('Internal Server Error');\n    }\n  }\n\n  //   get videos by id\n  public static async getVideosById(req: Request, res: Response) {\n    try {\n      const getVideosById = await VideosService.getVideosById(req.params.id);\n      res.send(getVideosById);\n    } catch (err) {\n      res.status(500).send('Internal Server Error');\n    }\n  }\n\n  //   delete videos by id\n  public static async deleteVideosById(req: Request, res: Response) {\n    try {\n      const deleteVideosById = await VideosService.deleteVideos(req.params.id);\n      res.status(200).json({\n        message: 'videos deleted successfully',\n      });\n    } catch (err) {\n      res.status(500).send('Internal Server Error');\n    }\n  }\n\n  //   add videos source\n\n  public static async addVideosSource(req: Request, res: Response) {\n    try {\n      const addVideosSource = await VideosService.addVideosSource(req.body);\n      if (addVideosSource == 'invalid video id') {\n        res.status(400).json({\n          message: 'invalid video id',\n        });\n      } else if (addVideosSource == 'videos source already exist') {\n        res.status(400).json({\n          message: 'videos source already exist',\n        });\n      } else {\n        res.status(200).send(addVideosSource);\n      }\n    } catch (err) {\n      res.status(500).send('Internal Server Error');\n    }\n  }\n\n  //   get  source by  video id\n\n  public static async getVideosSourceById(req: Request, res: Response) {\n    try {\n      const getVideosSourceById = await VideosService.getVideosSourceByVideoId(req.params.id);\n      res.send(getVideosSourceById);\n    } catch (err) {\n      res.status(500).send('Internal Server Error');\n    }\n  }\n\n  //   getSourceById\n\n  public static async getSourceById(req: Request, res: Response) {\n    try {\n      const getSourceById = await VideosService.getSourceById(req.params.id);\n      res.send(getSourceById);\n    } catch (err) {\n      res.status(500).send('Internal Server Error');\n    }\n  }\n}\n"],"names":["VideosController","addVideos","req","res","VideosService","body","status","json","message","send","err","getAllVideos","getVideos","getVideosById","params","id","deleteVideosById","deleteVideos","addVideosSource","getVideosSourceById","getVideosSourceByVideoId","getSourceById"],"mappings":";;;;+BAEaA;;;eAAAA;;;+BAFiB;AAEvB,IAAA,AAAMA,mBAAN,MAAMA;IAGX,aAAoBC,UAAUC,GAAY,EAAEC,GAAa,EAAE;QACzD,IAAI;YACF,MAAMF,YAAY,MAAMG,4BAAa,CAACH,SAAS,CAACC,IAAIG,IAAI;YAExD,IAAIJ,aAAa,wBAAwB;gBACvCE,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,SAAS;gBACX;YACF,CAAC;YACDL,IAAIM,IAAI,CAACR;QACX,EAAE,OAAOS,KAAK;YACZP,IAAIG,MAAM,CAAC,KAAKG,IAAI,CAAC;QACvB;IACF;IAEA,aAAoBE,aAAaT,GAAY,EAAEC,GAAa,EAAE;QAC5D,IAAI;YACF,MAAMQ,eAAe,MAAMP,4BAAa,CAACQ,SAAS;YAClDT,IAAIM,IAAI,CAACE;QACX,EAAE,OAAOD,KAAK;YACZP,IAAIG,MAAM,CAAC,KAAKG,IAAI,CAAC;QACvB;IACF;IAGA,aAAoBI,cAAcX,GAAY,EAAEC,GAAa,EAAE;QAC7D,IAAI;YACF,MAAMU,gBAAgB,MAAMT,4BAAa,CAACS,aAAa,CAACX,IAAIY,MAAM,CAACC,EAAE;YACrEZ,IAAIM,IAAI,CAACI;QACX,EAAE,OAAOH,KAAK;YACZP,IAAIG,MAAM,CAAC,KAAKG,IAAI,CAAC;QACvB;IACF;IAGA,aAAoBO,iBAAiBd,GAAY,EAAEC,GAAa,EAAE;QAChE,IAAI;YACF,MAAMa,mBAAmB,MAAMZ,4BAAa,CAACa,YAAY,CAACf,IAAIY,MAAM,CAACC,EAAE;YACvEZ,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;gBACnBC,SAAS;YACX;QACF,EAAE,OAAOE,KAAK;YACZP,IAAIG,MAAM,CAAC,KAAKG,IAAI,CAAC;QACvB;IACF;IAIA,aAAoBS,gBAAgBhB,GAAY,EAAEC,GAAa,EAAE;QAC/D,IAAI;YACF,MAAMe,kBAAkB,MAAMd,4BAAa,CAACc,eAAe,CAAChB,IAAIG,IAAI;YACpE,IAAIa,mBAAmB,oBAAoB;gBACzCf,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,SAAS;gBACX;YACF,OAAO,IAAIU,mBAAmB,+BAA+B;gBAC3Df,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,SAAS;gBACX;YACF,OAAO;gBACLL,IAAIG,MAAM,CAAC,KAAKG,IAAI,CAACS;YACvB,CAAC;QACH,EAAE,OAAOR,KAAK;YACZP,IAAIG,MAAM,CAAC,KAAKG,IAAI,CAAC;QACvB;IACF;IAIA,aAAoBU,oBAAoBjB,GAAY,EAAEC,GAAa,EAAE;QACnE,IAAI;YACF,MAAMgB,sBAAsB,MAAMf,4BAAa,CAACgB,wBAAwB,CAAClB,IAAIY,MAAM,CAACC,EAAE;YACtFZ,IAAIM,IAAI,CAACU;QACX,EAAE,OAAOT,KAAK;YACZP,IAAIG,MAAM,CAAC,KAAKG,IAAI,CAAC;QACvB;IACF;IAIA,aAAoBY,cAAcnB,GAAY,EAAEC,GAAa,EAAE;QAC7D,IAAI;YACF,MAAMkB,gBAAgB,MAAMjB,4BAAa,CAACiB,aAAa,CAACnB,IAAIY,MAAM,CAACC,EAAE;YACrEZ,IAAIM,IAAI,CAACY;QACX,EAAE,OAAOX,KAAK;YACZP,IAAIG,MAAM,CAAC,KAAKG,IAAI,CAAC;QACvB;IACF;AACF"}