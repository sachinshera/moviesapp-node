2023-05-14 19:45:52 info: Database connected
2023-05-14 19:46:27 info: =================================
2023-05-14 19:46:27 info: ======= ENV: development =======
2023-05-14 19:46:27 info: ðŸš€ App listening on the port 3000
2023-05-14 19:46:27 info: =================================
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT 1+1 AS result
2023-05-14 19:46:28 info: 15ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'videos'
2023-05-14 19:46:28 info: 2ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'videos_thumbnails'
2023-05-14 19:46:28 info: 2ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'videos_source'
2023-05-14 19:46:28 info: 2ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'movies'
2023-05-14 19:46:28 info: 10ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'series'
2023-05-14 19:46:28 info: 5ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'banners'
2023-05-14 19:46:28 info: 17ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'series_season_videos'
2023-05-14 19:46:28 info: 10ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'series_seasons'
2023-05-14 19:46:28 info: 2ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users'
2023-05-14 19:46:28 info: 13ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'categories_assoc'
2023-05-14 19:46:28 info: 10ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'genres_assoc'
2023-05-14 19:46:28 info: 9ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_status' GROUP BY 1
2023-05-14 19:46:28 info: 7ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_thumbnails_quality' GROUP BY 1
2023-05-14 19:46:28 info: 10ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_thumbnails_status' GROUP BY 1
2023-05-14 19:46:28 info: 11ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_source_status' GROUP BY 1
2023-05-14 19:46:28 info: 12ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_movies_status' GROUP BY 1
2023-05-14 19:46:28 info: 10ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_banners_status' GROUP BY 1
2023-05-14 19:46:28 info: 15ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 25ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'series' AND tc.table_catalog = 'moviesapp'
2023-05-14 19:46:28 info: 24ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'series_season_videos' AND tc.table_catalog = 'moviesapp'
2023-05-14 19:46:28 info: 23ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'series_seasons' AND tc.table_catalog = 'moviesapp'
2023-05-14 19:46:28 info: 21ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'categories_assoc' AND tc.table_catalog = 'moviesapp'
2023-05-14 19:46:28 info: 7ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'videos' AND tc.table_catalog = 'moviesapp'
2023-05-14 19:46:28 info: 6ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'videos_thumbnails' AND tc.table_catalog = 'moviesapp'
2023-05-14 19:46:28 info: 42ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'series' AND c.table_schema = 'public'
2023-05-14 19:46:28 info: 40ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'series_seasons' AND c.table_schema = 'public'
2023-05-14 19:46:28 info: 22ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'genres_assoc' AND tc.table_catalog = 'moviesapp'
2023-05-14 19:46:28 info: 47ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'series_season_videos' AND c.table_schema = 'public'
2023-05-14 19:46:28 info: 41ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'categories_assoc' AND c.table_schema = 'public'
2023-05-14 19:46:28 info: 11ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'videos_source' AND tc.table_catalog = 'moviesapp'
2023-05-14 19:46:28 info: 26ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'videos' AND c.table_schema = 'public'
2023-05-14 19:46:28 info: 43ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'genres_assoc' AND c.table_schema = 'public'
2023-05-14 19:46:28 info: 12ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'movies' AND tc.table_catalog = 'moviesapp'
2023-05-14 19:46:28 info: 29ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'videos_thumbnails' AND c.table_schema = 'public'
2023-05-14 19:46:28 info: 10ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin_users'
2023-05-14 19:46:28 info: 19ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'movies' AND c.table_schema = 'public'
2023-05-14 19:46:28 info: 13ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'banners' AND tc.table_catalog = 'moviesapp'
2023-05-14 19:46:28 info: 10ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "series_id" SET NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "series_id" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "series_id" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "series_season_videos" ALTER COLUMN "series_id" SET NOT NULL;ALTER TABLE "series_season_videos" ALTER COLUMN "series_id" DROP DEFAULT;ALTER TABLE "series_season_videos" ALTER COLUMN "series_id" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "categories_assoc" ALTER COLUMN "series_movie_id" SET NOT NULL;ALTER TABLE "categories_assoc" ALTER COLUMN "series_movie_id" DROP DEFAULT;ALTER TABLE "categories_assoc" ALTER COLUMN "series_movie_id" TYPE VARCHAR(40);
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "videos" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "videos" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "videos" ALTER COLUMN "title" TYPE TEXT;
2023-05-14 19:46:28 info: 16ms Executed (default): ALTER TABLE "series" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "series" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "name" TYPE VARCHAR(255);
2023-05-14 19:46:28 info: 9ms Executed (default): ALTER TABLE "genres_assoc" ALTER COLUMN "movies_series_id" SET NOT NULL;ALTER TABLE "genres_assoc" ALTER COLUMN "movies_series_id" DROP DEFAULT;ALTER TABLE "genres_assoc" ALTER COLUMN "movies_series_id" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 3ms Executed (default): ALTER TABLE "series_season_videos" ALTER COLUMN "season_id" SET NOT NULL;ALTER TABLE "series_season_videos" ALTER COLUMN "season_id" DROP DEFAULT;ALTER TABLE "series_season_videos" ALTER COLUMN "season_id" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 9ms Executed (default): ALTER TABLE "videos_thumbnails" ALTER COLUMN "video_id" SET NOT NULL;ALTER TABLE "videos_thumbnails" ALTER COLUMN "video_id" DROP DEFAULT;ALTER TABLE "videos_thumbnails" ALTER COLUMN "video_id" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 37ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'videos_source' AND c.table_schema = 'public'
2023-05-14 19:46:28 info: 7ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "season" SET NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "season" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "season" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 11ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin_users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 11ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "movies" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "title" TYPE TEXT;
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "categories_assoc" ALTER COLUMN "category_id" SET NOT NULL;ALTER TABLE "categories_assoc" ALTER COLUMN "category_id" DROP DEFAULT;ALTER TABLE "categories_assoc" ALTER COLUMN "category_id" TYPE VARCHAR(40);
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "videos" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "videos" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "videos" ALTER COLUMN "description" TYPE TEXT;
2023-05-14 19:46:28 info: 31ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'banners' AND c.table_schema = 'public'
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "genres_assoc" ALTER COLUMN "genre_id" DROP NOT NULL;ALTER TABLE "genres_assoc" ALTER COLUMN "genre_id" DROP DEFAULT;ALTER TABLE "genres_assoc" ALTER COLUMN "genre_id" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "series_season_videos" ALTER COLUMN "video" SET NOT NULL;ALTER TABLE "series_season_videos" ALTER COLUMN "video" DROP DEFAULT;ALTER TABLE "series_season_videos" ALTER COLUMN "video" TYPE TEXT;
2023-05-14 19:46:28 info: 11ms Executed (default): ALTER TABLE "series" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "series" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "description" TYPE VARCHAR(500);
2023-05-14 19:46:28 info: 9ms Executed (default): ALTER TABLE "videos_thumbnails" ALTER COLUMN "thumbnail" SET NOT NULL;ALTER TABLE "videos_thumbnails" ALTER COLUMN "thumbnail" DROP DEFAULT;ALTER TABLE "videos_thumbnails" ALTER COLUMN "thumbnail" TYPE VARCHAR(255);
2023-05-14 19:46:28 info: 9ms Executed (default): ALTER TABLE "videos_source" ALTER COLUMN "video_id" SET NOT NULL;ALTER TABLE "videos_source" ALTER COLUMN "video_id" DROP DEFAULT;ALTER TABLE "videos_source" ALTER COLUMN "video_id" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 9ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "description" TYPE VARCHAR(255);
2023-05-14 19:46:28 info: 9ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'session_tokens'
2023-05-14 19:46:28 info: 3ms Executed (default): ALTER TABLE "series" ALTER COLUMN "image" DROP NOT NULL;ALTER TABLE "series" ALTER COLUMN "image" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "image" TYPE TEXT;
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "videos" ALTER COLUMN "tags" SET NOT NULL;ALTER TABLE "videos" ALTER COLUMN "tags" DROP DEFAULT;ALTER TABLE "videos" ALTER COLUMN "tags" TYPE VARCHAR(255);
2023-05-14 19:46:28 info: 10ms Executed (default): ALTER TABLE "categories_assoc" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "categories_assoc" ALTER COLUMN "status" SET DEFAULT true;ALTER TABLE "categories_assoc" ALTER COLUMN "status" TYPE BOOLEAN;
2023-05-14 19:46:28 info: 12ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "description" TYPE TEXT;
2023-05-14 19:46:28 info: 10ms Executed (default): ALTER TABLE "banners" ALTER COLUMN "content_id" SET NOT NULL;ALTER TABLE "banners" ALTER COLUMN "content_id" DROP DEFAULT;ALTER TABLE "banners" ALTER COLUMN "content_id" TYPE VARCHAR(255);
2023-05-14 19:46:28 info: 10ms Executed (default): ALTER TABLE "genres_assoc" ALTER COLUMN "type" SET NOT NULL;ALTER TABLE "genres_assoc" ALTER COLUMN "type" DROP DEFAULT;ALTER TABLE "genres_assoc" ALTER COLUMN "type" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 10ms Executed (default): ALTER TABLE "series_season_videos" ALTER COLUMN "status" SET NOT NULL;ALTER TABLE "series_season_videos" ALTER COLUMN "status" SET DEFAULT true;ALTER TABLE "series_season_videos" ALTER COLUMN "status" TYPE BOOLEAN;
2023-05-14 19:46:28 info: 9ms Executed (default): ALTER TABLE "videos_source" ALTER COLUMN "source" SET NOT NULL;ALTER TABLE "videos_source" ALTER COLUMN "source" DROP DEFAULT;ALTER TABLE "videos_source" ALTER COLUMN "source" TYPE TEXT;
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "image" DROP NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "image" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "image" TYPE TEXT;
2023-05-14 19:46:28 info: 7ms Executed (default): ALTER TABLE "series" ALTER COLUMN "trailer" DROP NOT NULL;ALTER TABLE "series" ALTER COLUMN "trailer" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "trailer" TYPE TEXT;
2023-05-14 19:46:28 info: 9ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'session_tokens' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 7ms Executed (default): ALTER TABLE "categories_assoc" ALTER COLUMN "type" SET NOT NULL;ALTER TABLE "categories_assoc" ALTER COLUMN "type" DROP DEFAULT;ALTER TABLE "categories_assoc" ALTER COLUMN "type" TYPE VARCHAR(30);
2023-05-14 19:46:28 info: 6ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "release_date" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "release_date" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "release_date" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 7ms Executed (default): ALTER TABLE "banners" ALTER COLUMN "url" SET NOT NULL;ALTER TABLE "banners" ALTER COLUMN "url" DROP DEFAULT;ALTER TABLE "banners" ALTER COLUMN "url" TYPE TEXT;
2023-05-14 19:46:28 info: 6ms Executed (default): ALTER TABLE "genres_assoc" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "genres_assoc" ALTER COLUMN "status" SET DEFAULT true;ALTER TABLE "genres_assoc" ALTER COLUMN "status" TYPE BOOLEAN;
2023-05-14 19:46:28 info: 6ms Executed (default): ALTER TABLE "series_season_videos" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "series_season_videos" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "series_season_videos" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 6ms Executed (default): ALTER TABLE "videos_source" ALTER COLUMN "type" DROP NOT NULL;ALTER TABLE "videos_source" ALTER COLUMN "type" DROP DEFAULT;ALTER TABLE "videos_source" ALTER COLUMN "type" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 5ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "trailer" DROP NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "trailer" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "trailer" TYPE TEXT;
2023-05-14 19:46:28 info: 5ms Executed (default): ALTER TABLE "series" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "series" ALTER COLUMN "status" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "status" TYPE BOOLEAN;
2023-05-14 19:46:28 info: 13ms Executed (default): ALTER TABLE "videos" ALTER COLUMN "status" SET NOT NULL;ALTER TABLE "videos" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_videos_status" AS ENUM(''active'', ''inactive'', ''deleted''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "videos" ALTER COLUMN "status" TYPE "public"."enum_videos_status" USING ("status"::"public"."enum_videos_status");
2023-05-14 19:46:28 info: 19ms Executed (default): ALTER TABLE "videos_thumbnails" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "videos_thumbnails" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_videos_thumbnails_status" AS ENUM(''active'', ''inactive'', ''deleted''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "videos_thumbnails" ALTER COLUMN "status" TYPE "public"."enum_videos_thumbnails_status" USING ("status"::"public"."enum_videos_thumbnails_status");
2023-05-14 19:46:28 info: 8ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'videos'
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "categories_assoc" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "categories_assoc" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "categories_assoc" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "rating" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "rating" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "rating" TYPE FLOAT;
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "banners" ALTER COLUMN "quality" DROP NOT NULL;ALTER TABLE "banners" ALTER COLUMN "quality" SET DEFAULT 'HD';ALTER TABLE "banners" ALTER COLUMN "quality" TYPE VARCHAR(10);
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "series_season_videos" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "series_season_videos" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "series_season_videos" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 10ms Executed (default): ALTER TABLE "genres_assoc" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "genres_assoc" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "genres_assoc" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "series" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "series" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 9ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "status" SET NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "status" SET DEFAULT true;ALTER TABLE "series_seasons" ALTER COLUMN "status" TYPE BOOLEAN;
2023-05-14 19:46:28 info: 7ms Executed (default): ALTER TABLE "videos" ALTER COLUMN "views" SET NOT NULL;ALTER TABLE "videos" ALTER COLUMN "views" SET DEFAULT 0;ALTER TABLE "videos" ALTER COLUMN "views" TYPE INTEGER;
2023-05-14 19:46:28 info: 6ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_status' GROUP BY 1
2023-05-14 19:46:28 info: 12ms Executed (default): ALTER TABLE "videos_source" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "videos_source" ALTER COLUMN "status" SET DEFAULT 'active';DO 'BEGIN CREATE TYPE "public"."enum_videos_source_status" AS ENUM(''active'', ''inactive'', ''deleted''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "videos_source" ALTER COLUMN "status" TYPE "public"."enum_videos_source_status" USING ("status"::"public"."enum_videos_source_status");
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "categories_assoc" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "categories_assoc" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "categories_assoc" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "region" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "region" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "region" TYPE VARCHAR(255);
2023-05-14 19:46:28 info: 12ms Executed (default): ALTER TABLE "videos_thumbnails" ALTER COLUMN "quality" DROP NOT NULL;ALTER TABLE "videos_thumbnails" ALTER COLUMN "quality" SET DEFAULT 'default';DO 'BEGIN CREATE TYPE "public"."enum_videos_thumbnails_quality" AS ENUM(''default'', ''medium'', ''high'', ''standard'', ''maxres''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "videos_thumbnails" ALTER COLUMN "quality" TYPE "public"."enum_videos_thumbnails_quality" USING ("quality"::"public"."enum_videos_thumbnails_quality");
2023-05-14 19:46:28 info: 7ms Executed (default): ALTER TABLE "genres_assoc" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "genres_assoc" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "genres_assoc" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 9ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'series_season_videos' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "series" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "series" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "videos" ALTER COLUMN "language" SET NOT NULL;ALTER TABLE "videos" ALTER COLUMN "language" DROP DEFAULT;ALTER TABLE "videos" ALTER COLUMN "language" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 14ms Executed (default): ALTER TABLE "banners" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "banners" ALTER COLUMN "status" SET DEFAULT 'active';DO 'BEGIN CREATE TYPE "public"."enum_banners_status" AS ENUM(''active'', ''inactive''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "banners" ALTER COLUMN "status" TYPE "public"."enum_banners_status" USING ("status"::"public"."enum_banners_status");
2023-05-14 19:46:28 info: 9ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'videos' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 9ms Executed (default): ALTER TABLE "videos_source" ALTER COLUMN "quality" DROP NOT NULL;ALTER TABLE "videos_source" ALTER COLUMN "quality" SET DEFAULT '720p';ALTER TABLE "videos_source" ALTER COLUMN "quality" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "language" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "language" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "language" TYPE VARCHAR(255);
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "videos_thumbnails" ALTER COLUMN "language" DROP NOT NULL;ALTER TABLE "videos_thumbnails" ALTER COLUMN "language" DROP DEFAULT;ALTER TABLE "videos_thumbnails" ALTER COLUMN "language" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 12ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'categories_assoc' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 9ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'genres_assoc' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 8ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 11ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'series' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 11ms Executed (default): ALTER TABLE "banners" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "banners" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "banners" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 10ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'videos_thumbnails'
2023-05-14 19:46:28 info: 14ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'videos' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 13ms Executed (default): ALTER TABLE "videos_source" ALTER COLUMN "language" DROP NOT NULL;ALTER TABLE "videos_source" ALTER COLUMN "language" SET DEFAULT 'en';ALTER TABLE "videos_source" ALTER COLUMN "language" TYPE VARCHAR(45);
2023-05-14 19:46:28 info: 13ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "genre" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "genre" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "genre" TYPE VARCHAR(255);
2023-05-14 19:46:28 info: 13ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'videos_thumbnails' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 6ms Executed (default): ALTER TABLE "banners" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "banners" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "banners" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 12ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'series_seasons' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 8ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_thumbnails_status' GROUP BY 1
2023-05-14 19:46:28 info: 8ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_thumbnails_quality' GROUP BY 1
2023-05-14 19:46:28 info: 5ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "status" SET DEFAULT 'active';DO 'BEGIN CREATE TYPE "public"."enum_movies_status" AS ENUM(''active'', ''inactive''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "movies" ALTER COLUMN "status" TYPE "public"."enum_movies_status" USING ("status"::"public"."enum_movies_status");
2023-05-14 19:46:28 info: 8ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'videos_source' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 2ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'videos_thumbnails' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 5ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'banners' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 3ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "video_id" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "video_id" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "video_id" TYPE VARCHAR(255);
2023-05-14 19:46:28 info: 2ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'videos_source'
2023-05-14 19:46:28 info: 1ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "movies" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_source_status' GROUP BY 1
2023-05-14 19:46:28 info: 1ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "movies" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 19:46:28 info: 2ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'videos_source' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 0ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'movies'
2023-05-14 19:46:28 info: 3ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'movies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_movies_status' GROUP BY 1
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'movies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'series'
2023-05-14 19:46:28 info: 2ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'series' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'series_season_videos'
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'series_season_videos' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'banners'
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_banners_status' GROUP BY 1
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'banners' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 0ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'series_seasons'
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'series_seasons' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 2ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'categories'
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'categories' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 0ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'genres'
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'genres' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'trailers'
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_trailers_quality' GROUP BY 1
2023-05-14 19:46:28 info: 2ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'trailers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'categories_assoc'
2023-05-14 19:46:28 info: 2ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'categories_assoc' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:46:28 info: 1ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'genres_assoc'
2023-05-14 19:46:28 info: 2ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'genres_assoc' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 19:49:45 info: 19ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:49:50 info: [0mGET /movies [36m304[0m 5195.687 ms - -[0m
2023-05-14 19:49:50 info: 17ms Executed (default): SELECT "SeriesModel".*, "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt" FROM (SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt" FROM "series" AS "SeriesModel" WHERE "SeriesModel"."name" LIKE '%%' LIMIT 14 OFFSET 0) AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" LEFT OUTER JOIN "banners" AS "banners" ON "SeriesModel"."id" = "banners"."content_id";
2023-05-14 19:49:50 info: [0mGET /series?limit=14 [36m304[0m 5195.366 ms - -[0m
2023-05-14 19:49:50 info: 4ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:49:50 info: [0mGET /movies [36m304[0m 19.167 ms - -[0m
2023-05-14 19:49:50 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:49:50 info: [0mGET /movies [36m304[0m 8.643 ms - -[0m
2023-05-14 19:49:50 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:49:50 info: [0mGET /movies [36m304[0m 7.698 ms - -[0m
2023-05-14 19:49:50 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:49:50 info: [0mGET /movies [36m304[0m 9.663 ms - -[0m
2023-05-14 19:50:00 info: 2ms Executed (default): SELECT "SeriesModel".*, "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt" FROM (SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt" FROM "series" AS "SeriesModel" WHERE "SeriesModel"."name" LIKE '%%' LIMIT 14 OFFSET 0) AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" LEFT OUTER JOIN "banners" AS "banners" ON "SeriesModel"."id" = "banners"."content_id";
2023-05-14 19:50:00 info: [0mGET /series?limit=14 [36m304[0m 10.072 ms - -[0m
2023-05-14 19:50:00 info: 13ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:50:00 info: [0mGET /movies [36m304[0m 20.836 ms - -[0m
2023-05-14 19:50:00 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:50:00 info: [0mGET /movies [36m304[0m 6.852 ms - -[0m
2023-05-14 19:50:00 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:50:00 info: [0mGET /movies [36m304[0m 7.465 ms - -[0m
2023-05-14 19:50:00 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:50:00 info: [0mGET /movies [36m304[0m 9.338 ms - -[0m
2023-05-14 19:50:00 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:50:00 info: [0mGET /movies [36m304[0m 7.861 ms - -[0m
2023-05-14 19:50:03 info: 5ms Executed (default): SELECT "SeriesModel".*, "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt" FROM (SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt" FROM "series" AS "SeriesModel" WHERE "SeriesModel"."name" LIKE '%%' LIMIT 14 OFFSET 0) AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" LEFT OUTER JOIN "banners" AS "banners" ON "SeriesModel"."id" = "banners"."content_id";
2023-05-14 19:50:03 info: [0mGET /series?limit=14 [36m304[0m 11.509 ms - -[0m
2023-05-14 19:51:22 info: 11ms Executed (default): SELECT "SeriesModel".*, "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt" FROM (SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt" FROM "series" AS "SeriesModel" WHERE "SeriesModel"."name" LIKE '%%' LIMIT 14 OFFSET 0) AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" LEFT OUTER JOIN "banners" AS "banners" ON "SeriesModel"."id" = "banners"."content_id";
2023-05-14 19:51:22 info: [0mGET /series?limit=14 [36m304[0m 52.432 ms - -[0m
2023-05-14 19:53:58 info: 8ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:53:58 info: [0mGET /movies [36m304[0m 46.431 ms - -[0m
2023-05-14 19:53:58 info: 10ms Executed (default): SELECT "SeriesModel".*, "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt" FROM (SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt" FROM "series" AS "SeriesModel" WHERE "SeriesModel"."name" LIKE '%%' LIMIT 14 OFFSET 0) AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" LEFT OUTER JOIN "banners" AS "banners" ON "SeriesModel"."id" = "banners"."content_id";
2023-05-14 19:53:58 info: [0mGET /series?limit=14 [36m304[0m 46.419 ms - -[0m
2023-05-14 19:53:58 info: 4ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:53:58 info: [0mGET /movies [36m304[0m 7.809 ms - -[0m
2023-05-14 19:53:59 info: 3ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:53:59 info: [0mGET /movies [36m304[0m 8.190 ms - -[0m
2023-05-14 19:53:59 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:53:59 info: [0mGET /movies [36m304[0m 6.724 ms - -[0m
2023-05-14 19:53:59 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:53:59 info: [0mGET /movies [36m304[0m 5.861 ms - -[0m
2023-05-14 19:54:13 info: 7ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:54:13 info: [0mGET /movies [36m304[0m 43.646 ms - -[0m
2023-05-14 19:54:15 info: 6ms Executed (default): SELECT "SeriesModel".*, "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt" FROM (SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt" FROM "series" AS "SeriesModel" WHERE "SeriesModel"."name" LIKE '%%' LIMIT 14 OFFSET 0) AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" LEFT OUTER JOIN "banners" AS "banners" ON "SeriesModel"."id" = "banners"."content_id";
2023-05-14 19:54:15 info: [0mGET /series?limit=14 [36m304[0m 10.851 ms - -[0m
2023-05-14 19:58:23 info: 9ms Executed (default): SELECT "SeriesModel".*, "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt" FROM (SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt" FROM "series" AS "SeriesModel" WHERE "SeriesModel"."name" LIKE '%%' LIMIT 14 OFFSET 0) AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" LEFT OUTER JOIN "banners" AS "banners" ON "SeriesModel"."id" = "banners"."content_id";
2023-05-14 19:58:23 info: [0mGET /series?limit=14 [36m304[0m 44.734 ms - -[0m
2023-05-14 19:58:24 info: 6ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:58:24 info: [0mGET /movies [36m304[0m 13.292 ms - -[0m
2023-05-14 19:58:24 info: 6ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:58:24 info: [0mGET /movies [36m304[0m 11.610 ms - -[0m
2023-05-14 19:58:24 info: 4ms Executed (default): SELECT "SeriesModel".*, "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt" FROM (SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt" FROM "series" AS "SeriesModel" WHERE "SeriesModel"."name" LIKE '%%' LIMIT 14 OFFSET 0) AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" LEFT OUTER JOIN "banners" AS "banners" ON "SeriesModel"."id" = "banners"."content_id";
2023-05-14 19:58:24 info: [0mGET /series?limit=14 [36m304[0m 14.566 ms - -[0m
2023-05-14 19:58:24 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:58:24 info: [0mGET /movies [36m304[0m 7.702 ms - -[0m
2023-05-14 19:58:24 info: 3ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:58:24 info: [0mGET /movies [36m304[0m 8.824 ms - -[0m
2023-05-14 19:58:24 info: 4ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:58:24 info: [0mGET /movies [36m304[0m 9.134 ms - -[0m
2023-05-14 19:58:24 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 19:58:24 info: [0mGET /movies [36m304[0m 5.314 ms - -[0m
2023-05-14 20:33:29 info: 20ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'a' OR "MoviesModel"."description" @@ 'a');
2023-05-14 20:33:29 info: 4ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'a' OR "SeriesModel"."description" @@ 'a');
2023-05-14 20:33:29 info: [0mGET /search/a [32m200[0m 170.107 ms - 2[0m
2023-05-14 20:33:37 info: [0mGET /search/ [33m404[0m 2.392 ms - 146[0m
2023-05-14 20:33:38 info: 3ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'm' OR "MoviesModel"."description" @@ 'm');
2023-05-14 20:33:38 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'm' OR "SeriesModel"."description" @@ 'm');
2023-05-14 20:33:38 info: [0mGET /search/m [32m200[0m 11.442 ms - 2[0m
2023-05-14 20:33:38 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'mo' OR "MoviesModel"."description" @@ 'mo');
2023-05-14 20:33:38 info: 2ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'mo' OR "SeriesModel"."description" @@ 'mo');
2023-05-14 20:33:38 info: [0mGET /search/mo [32m200[0m 8.401 ms - 2[0m
2023-05-14 20:33:38 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'mov' OR "MoviesModel"."description" @@ 'mov');
2023-05-14 20:33:38 info: 2ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'mov' OR "SeriesModel"."description" @@ 'mov');
2023-05-14 20:33:38 info: [0mGET /search/mov [32m200[0m 9.166 ms - 2[0m
2023-05-14 20:33:38 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'movi' OR "MoviesModel"."description" @@ 'movi');
2023-05-14 20:33:38 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'movi' OR "SeriesModel"."description" @@ 'movi');
2023-05-14 20:33:38 info: [0mGET /search/movi [32m200[0m 9.183 ms - 2[0m
2023-05-14 20:33:38 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'movie' OR "MoviesModel"."description" @@ 'movie');
2023-05-14 20:33:38 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'movie' OR "SeriesModel"."description" @@ 'movie');
2023-05-14 20:33:38 info: [0mGET /search/movie [32m200[0m 9.384 ms - 2[0m
2023-05-14 20:33:39 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'movie' OR "MoviesModel"."description" @@ 'movie');
2023-05-14 20:33:39 info: 2ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'movie' OR "SeriesModel"."description" @@ 'movie');
2023-05-14 20:33:39 info: [0mGET /search/movie [36m304[0m 8.564 ms - -[0m
2023-05-14 20:33:39 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'movie' OR "MoviesModel"."description" @@ 'movie');
2023-05-14 20:33:39 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'movie' OR "SeriesModel"."description" @@ 'movie');
2023-05-14 20:33:39 info: [0mGET /search/movie [36m304[0m 8.452 ms - -[0m
2023-05-14 20:33:45 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'movi' OR "MoviesModel"."description" @@ 'movi');
2023-05-14 20:33:45 info: 2ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'movi' OR "SeriesModel"."description" @@ 'movi');
2023-05-14 20:33:45 info: [0mGET /search/movi [36m304[0m 9.899 ms - -[0m
2023-05-14 20:33:45 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'mov' OR "MoviesModel"."description" @@ 'mov');
2023-05-14 20:33:45 info: 2ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'mov' OR "SeriesModel"."description" @@ 'mov');
2023-05-14 20:33:45 info: [0mGET /search/mov [36m304[0m 8.668 ms - -[0m
2023-05-14 20:33:45 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'mo' OR "MoviesModel"."description" @@ 'mo');
2023-05-14 20:33:45 info: 2ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'mo' OR "SeriesModel"."description" @@ 'mo');
2023-05-14 20:33:45 info: [0mGET /search/mo [36m304[0m 9.235 ms - -[0m
2023-05-14 20:33:45 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'm' OR "MoviesModel"."description" @@ 'm');
2023-05-14 20:33:45 info: 2ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'm' OR "SeriesModel"."description" @@ 'm');
2023-05-14 20:33:45 info: [0mGET /search/m [36m304[0m 10.110 ms - -[0m
2023-05-14 20:33:45 info: [0mGET /search/ [33m404[0m 0.607 ms - 146[0m
2023-05-14 20:33:46 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'l' OR "MoviesModel"."description" @@ 'l');
2023-05-14 20:33:46 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'l' OR "SeriesModel"."description" @@ 'l');
2023-05-14 20:33:46 info: [0mGET /search/l [32m200[0m 9.875 ms - 2[0m
2023-05-14 20:33:46 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'li' OR "MoviesModel"."description" @@ 'li');
2023-05-14 20:33:46 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'li' OR "SeriesModel"."description" @@ 'li');
2023-05-14 20:33:46 info: [0mGET /search/li [32m200[0m 8.989 ms - 2[0m
2023-05-14 20:33:47 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'lik' OR "MoviesModel"."description" @@ 'lik');
2023-05-14 20:33:47 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'lik' OR "SeriesModel"."description" @@ 'lik');
2023-05-14 20:33:47 info: [0mGET /search/lik [32m200[0m 8.069 ms - 2[0m
2023-05-14 20:33:47 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'like' OR "MoviesModel"."description" @@ 'like');
2023-05-14 20:33:47 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'like' OR "SeriesModel"."description" @@ 'like');
2023-05-14 20:33:47 info: [0mGET /search/like [32m200[0m 7.950 ms - 2[0m
2023-05-14 20:33:47 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'like' OR "MoviesModel"."description" @@ 'like');
2023-05-14 20:33:47 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'like' OR "SeriesModel"."description" @@ 'like');
2023-05-14 20:33:47 info: [0mGET /search/like [36m304[0m 9.783 ms - -[0m
2023-05-14 20:33:47 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'like' OR "MoviesModel"."description" @@ 'like');
2023-05-14 20:33:47 info: 2ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'like' OR "SeriesModel"."description" @@ 'like');
2023-05-14 20:33:47 info: [0mGET /search/like [36m304[0m 9.066 ms - -[0m
2023-05-14 20:34:15 info: 10ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 20:34:15 info: [0mGET /movies [36m304[0m 64.221 ms - -[0m
2023-05-14 20:34:15 info: 13ms Executed (default): SELECT "SeriesModel".*, "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt" FROM (SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt" FROM "series" AS "SeriesModel" WHERE "SeriesModel"."name" LIKE '%%' LIMIT 14 OFFSET 0) AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" LEFT OUTER JOIN "banners" AS "banners" ON "SeriesModel"."id" = "banners"."content_id";
2023-05-14 20:34:15 info: [0mGET /series?limit=14 [36m304[0m 63.803 ms - -[0m
2023-05-14 20:34:15 info: 5ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 20:34:15 info: [0mGET /movies [36m304[0m 9.979 ms - -[0m
2023-05-14 20:34:15 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 20:34:15 info: [0mGET /movies [36m304[0m 7.212 ms - -[0m
2023-05-14 20:34:15 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 20:34:15 info: [0mGET /movies [36m304[0m 8.033 ms - -[0m
2023-05-14 20:34:15 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" ORDER BY "createdAt" DESC;
2023-05-14 20:34:15 info: [0mGET /movies [36m304[0m 10.180 ms - -[0m
2023-05-14 20:34:21 info: 6ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'm' OR "MoviesModel"."description" @@ 'm');
2023-05-14 20:34:21 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'm' OR "SeriesModel"."description" @@ 'm');
2023-05-14 20:34:21 info: [0mGET /search/m [36m304[0m 12.538 ms - -[0m
2023-05-14 20:34:21 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'mu' OR "MoviesModel"."description" @@ 'mu');
2023-05-14 20:34:21 info: 2ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'mu' OR "SeriesModel"."description" @@ 'mu');
2023-05-14 20:34:21 info: [0mGET /search/mu [32m200[0m 7.835 ms - 2[0m
2023-05-14 20:34:21 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'mus' OR "MoviesModel"."description" @@ 'mus');
2023-05-14 20:34:21 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'mus' OR "SeriesModel"."description" @@ 'mus');
2023-05-14 20:34:21 info: [0mGET /search/mus [32m200[0m 8.351 ms - 2[0m
2023-05-14 20:34:21 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'musi' OR "MoviesModel"."description" @@ 'musi');
2023-05-14 20:34:21 info: 2ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'musi' OR "SeriesModel"."description" @@ 'musi');
2023-05-14 20:34:21 info: [0mGET /search/musi [32m200[0m 8.496 ms - 2[0m
2023-05-14 20:34:21 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'music' OR "MoviesModel"."description" @@ 'music');
2023-05-14 20:34:21 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'music' OR "SeriesModel"."description" @@ 'music');
2023-05-14 20:34:21 info: [0mGET /search/music [32m200[0m 12.938 ms - -[0m
2023-05-14 20:34:21 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'music' OR "MoviesModel"."description" @@ 'music');
2023-05-14 20:34:21 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'music' OR "SeriesModel"."description" @@ 'music');
2023-05-14 20:34:21 info: [0mGET /search/music [36m304[0m 8.872 ms - -[0m
2023-05-14 20:34:22 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'music' OR "MoviesModel"."description" @@ 'music');
2023-05-14 20:34:22 info: 2ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'music' OR "SeriesModel"."description" @@ 'music');
2023-05-14 20:34:22 info: [0mGET /search/music [36m304[0m 9.665 ms - -[0m
2023-05-14 20:35:00 info: 10ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'musi' OR "MoviesModel"."description" @@ 'musi');
2023-05-14 20:35:00 info: 4ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'musi' OR "SeriesModel"."description" @@ 'musi');
2023-05-14 20:35:00 info: [0mGET /search/musi [36m304[0m 47.791 ms - -[0m
2023-05-14 20:35:02 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'music' OR "MoviesModel"."description" @@ 'music');
2023-05-14 20:35:02 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'music' OR "SeriesModel"."description" @@ 'music');
2023-05-14 20:35:02 info: [0mGET /search/music [36m304[0m 8.886 ms - -[0m
2023-05-14 20:35:03 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'music' OR "MoviesModel"."description" @@ 'music');
2023-05-14 20:35:03 info: 2ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'music' OR "SeriesModel"."description" @@ 'music');
2023-05-14 20:35:03 info: [0mGET /search/music [36m304[0m 9.436 ms - -[0m
2023-05-14 20:35:03 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'music s' OR "MoviesModel"."description" @@ 'music s');
2023-05-14 20:35:03 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'music s' OR "SeriesModel"."description" @@ 'music s');
2023-05-14 20:35:03 info: [0mGET /search/music%20s [32m200[0m 9.254 ms - -[0m
2023-05-14 20:35:04 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'music sc' OR "MoviesModel"."description" @@ 'music sc');
2023-05-14 20:35:04 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'music sc' OR "SeriesModel"."description" @@ 'music sc');
2023-05-14 20:35:04 info: [0mGET /search/music%20sc [32m200[0m 7.824 ms - 2[0m
2023-05-14 20:35:04 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'music sch' OR "MoviesModel"."description" @@ 'music sch');
2023-05-14 20:35:04 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'music sch' OR "SeriesModel"."description" @@ 'music sch');
2023-05-14 20:35:04 info: [0mGET /search/music%20sch [32m200[0m 8.413 ms - 2[0m
2023-05-14 20:35:04 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'music scho' OR "MoviesModel"."description" @@ 'music scho');
2023-05-14 20:35:04 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'music scho' OR "SeriesModel"."description" @@ 'music scho');
2023-05-14 20:35:04 info: [0mGET /search/music%20scho [32m200[0m 7.294 ms - 2[0m
2023-05-14 20:35:04 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'music schoo' OR "MoviesModel"."description" @@ 'music schoo');
2023-05-14 20:35:04 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'music schoo' OR "SeriesModel"."description" @@ 'music schoo');
2023-05-14 20:35:04 info: [0mGET /search/music%20schoo [32m200[0m 9.005 ms - 2[0m
2023-05-14 20:35:05 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'music school' OR "MoviesModel"."description" @@ 'music school');
2023-05-14 20:35:05 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'music school' OR "SeriesModel"."description" @@ 'music school');
2023-05-14 20:35:05 info: [0mGET /search/music%20school [32m200[0m 9.477 ms - -[0m
2023-05-14 20:35:05 info: 1ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'music school' OR "MoviesModel"."description" @@ 'music school');
2023-05-14 20:35:05 info: 2ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'music school' OR "SeriesModel"."description" @@ 'music school');
2023-05-14 20:35:05 info: [0mGET /search/music%20school [36m304[0m 8.558 ms - -[0m
2023-05-14 20:35:05 info: 2ms Executed (default): SELECT "MoviesModel"."id", "MoviesModel"."title", "MoviesModel"."description", "MoviesModel"."release_date", "MoviesModel"."rating", "MoviesModel"."region", "MoviesModel"."language", "MoviesModel"."genre", "MoviesModel"."status", "MoviesModel"."video_id", "MoviesModel"."created_at" AS "createdAt", "MoviesModel"."updated_at" AS "updatedAt", "banners"."id" AS "banners.id", "banners"."content_id" AS "banners.contentId", "banners"."url" AS "banners.url", "banners"."quality" AS "banners.quality", "banners"."status" AS "banners.status", "banners"."created_at" AS "banners.createdAt", "banners"."updated_at" AS "banners.updatedAt", "videos"."id" AS "videos.id", "videos"."title" AS "videos.title", "videos"."description" AS "videos.description", "videos"."tags" AS "videos.tags", "videos"."status" AS "videos.status", "videos"."views" AS "videos.views", "videos"."language" AS "videos.language", "videos->sources"."id" AS "videos.sources.id", "videos->sources"."video_id" AS "videos.sources.videoId", "videos->sources"."source" AS "videos.sources.source", "videos->sources"."type" AS "videos.sources.type", "videos->sources"."status" AS "videos.sources.status", "videos->sources"."quality" AS "videos.sources.quality", "videos->sources"."language" AS "videos.sources.language", "videos->sources"."video_id" AS "videos.sources.video_id", "videos->thumbnails"."id" AS "videos.thumbnails.id", "videos->thumbnails"."video_id" AS "videos.thumbnails.videoId", "videos->thumbnails"."thumbnail" AS "videos.thumbnails.thumbnail", "videos->thumbnails"."status" AS "videos.thumbnails.status", "videos->thumbnails"."quality" AS "videos.thumbnails.quality", "videos->thumbnails"."language" AS "videos.thumbnails.language", "videos->thumbnails"."video_id" AS "videos.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "movies" AS "MoviesModel" LEFT OUTER JOIN "banners" AS "banners" ON "MoviesModel"."id" = "banners"."content_id" LEFT OUTER JOIN "videos" AS "videos" ON "MoviesModel"."video_id" = "videos"."id" LEFT OUTER JOIN "videos_source" AS "videos->sources" ON "videos"."id" = "videos->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "videos->thumbnails" ON "videos"."id" = "videos->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "MoviesModel"."id" = "trailers"."movies_series_id" WHERE ("MoviesModel"."title" @@ 'music school' OR "MoviesModel"."description" @@ 'music school');
2023-05-14 20:35:05 info: 1ms Executed (default): SELECT "SeriesModel"."id", "SeriesModel"."name", "SeriesModel"."description", "SeriesModel"."image", "SeriesModel"."trailer", "SeriesModel"."status", "SeriesModel"."created_at" AS "createdAt", "SeriesModel"."updated_at" AS "updatedAt", "seasons"."id" AS "seasons.id", "seasons"."series_id" AS "seasons.series_id", "seasons"."season" AS "seasons.season", "seasons"."description" AS "seasons.description", "seasons"."image" AS "seasons.image", "seasons"."trailer" AS "seasons.trailer", "seasons"."status" AS "seasons.status", "seasons"."created_at" AS "seasons.createdAt", "seasons"."updated_at" AS "seasons.updatedAt", "seasons->episodes"."id" AS "seasons.episodes.id", "seasons->episodes"."series_id" AS "seasons.episodes.series_id", "seasons->episodes"."season_id" AS "seasons.episodes.season_id", "seasons->episodes"."video" AS "seasons.episodes.video", "seasons->episodes"."status" AS "seasons.episodes.status", "seasons->episodes"."created_at" AS "seasons.episodes.createdAt", "seasons->episodes"."updated_at" AS "seasons.episodes.updatedAt", "seasons->episodes->episodesDetails"."id" AS "seasons.episodes.episodesDetails.id", "seasons->episodes->episodesDetails"."title" AS "seasons.episodes.episodesDetails.title", "seasons->episodes->episodesDetails"."description" AS "seasons.episodes.episodesDetails.description", "seasons->episodes->episodesDetails"."tags" AS "seasons.episodes.episodesDetails.tags", "seasons->episodes->episodesDetails"."status" AS "seasons.episodes.episodesDetails.status", "seasons->episodes->episodesDetails"."views" AS "seasons.episodes.episodesDetails.views", "seasons->episodes->episodesDetails"."language" AS "seasons.episodes.episodesDetails.language", "seasons->episodes->episodesDetails->sources"."id" AS "seasons.episodes.episodesDetails.sources.id", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.videoId", "seasons->episodes->episodesDetails->sources"."source" AS "seasons.episodes.episodesDetails.sources.source", "seasons->episodes->episodesDetails->sources"."type" AS "seasons.episodes.episodesDetails.sources.type", "seasons->episodes->episodesDetails->sources"."status" AS "seasons.episodes.episodesDetails.sources.status", "seasons->episodes->episodesDetails->sources"."quality" AS "seasons.episodes.episodesDetails.sources.quality", "seasons->episodes->episodesDetails->sources"."language" AS "seasons.episodes.episodesDetails.sources.language", "seasons->episodes->episodesDetails->sources"."video_id" AS "seasons.episodes.episodesDetails.sources.video_id", "seasons->episodes->episodesDetails->thumbnails"."id" AS "seasons.episodes.episodesDetails.thumbnails.id", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.videoId", "seasons->episodes->episodesDetails->thumbnails"."thumbnail" AS "seasons.episodes.episodesDetails.thumbnails.thumbnail", "seasons->episodes->episodesDetails->thumbnails"."status" AS "seasons.episodes.episodesDetails.thumbnails.status", "seasons->episodes->episodesDetails->thumbnails"."quality" AS "seasons.episodes.episodesDetails.thumbnails.quality", "seasons->episodes->episodesDetails->thumbnails"."language" AS "seasons.episodes.episodesDetails.thumbnails.language", "seasons->episodes->episodesDetails->thumbnails"."video_id" AS "seasons.episodes.episodesDetails.thumbnails.video_id", "trailers"."id" AS "trailers.id", "trailers"."movies_series_id" AS "trailers.movies_series_id", "trailers"."url" AS "trailers.url", "trailers"."quality" AS "trailers.quality", "trailers"."status" AS "trailers.status", "trailers"."created_at" AS "trailers.createdAt", "trailers"."updated_at" AS "trailers.updatedAt" FROM "series" AS "SeriesModel" LEFT OUTER JOIN "series_seasons" AS "seasons" ON "SeriesModel"."id" = "seasons"."series_id" LEFT OUTER JOIN "series_season_videos" AS "seasons->episodes" ON "seasons"."id" = "seasons->episodes"."season_id" LEFT OUTER JOIN "videos" AS "seasons->episodes->episodesDetails" ON "seasons->episodes"."video" = "seasons->episodes->episodesDetails"."id" LEFT OUTER JOIN "videos_source" AS "seasons->episodes->episodesDetails->sources" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->sources"."video_id" LEFT OUTER JOIN "videos_thumbnails" AS "seasons->episodes->episodesDetails->thumbnails" ON "seasons->episodes->episodesDetails"."id" = "seasons->episodes->episodesDetails->thumbnails"."video_id" LEFT OUTER JOIN "trailers" AS "trailers" ON "SeriesModel"."id" = "trailers"."movies_series_id" WHERE ("SeriesModel"."name" @@ 'music school' OR "SeriesModel"."description" @@ 'music school');
2023-05-14 20:35:05 info: [0mGET /search/music%20school [36m304[0m 9.148 ms - -[0m
2023-05-14 22:48:21 info: Database connected
2023-05-14 22:48:22 info: =================================
2023-05-14 22:48:22 info: ======= ENV: development =======
2023-05-14 22:48:22 info: ðŸš€ App listening on the port 3000
2023-05-14 22:48:22 info: =================================
2023-05-14 22:48:22 info: 0ms Executed (default): SELECT 1+1 AS result
2023-05-14 22:48:22 info: 16ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'videos'
2023-05-14 22:48:22 info: 3ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'videos_thumbnails'
2023-05-14 22:48:22 info: 8ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'videos_source'
2023-05-14 22:48:22 info: 11ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'movies'
2023-05-14 22:48:22 info: 8ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'banners'
2023-05-14 22:48:22 info: 14ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'series'
2023-05-14 22:48:22 info: 12ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'series_season_videos'
2023-05-14 22:48:22 info: 2ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users'
2023-05-14 22:48:22 info: 8ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'categories_assoc'
2023-05-14 22:48:22 info: 15ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'series_seasons'
2023-05-14 22:48:22 info: 7ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'genres_assoc'
2023-05-14 22:48:22 info: 6ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_thumbnails_status' GROUP BY 1
2023-05-14 22:48:22 info: 6ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_thumbnails_quality' GROUP BY 1
2023-05-14 22:48:22 info: 10ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_status' GROUP BY 1
2023-05-14 22:48:22 info: 8ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_source_status' GROUP BY 1
2023-05-14 22:48:22 info: 7ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_movies_status' GROUP BY 1
2023-05-14 22:48:22 info: 8ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_banners_status' GROUP BY 1
2023-05-14 22:48:22 info: 11ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 17ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'series' AND tc.table_catalog = 'moviesapp'
2023-05-14 22:48:22 info: 16ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'categories_assoc' AND tc.table_catalog = 'moviesapp'
2023-05-14 22:48:22 info: 21ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'series_season_videos' AND tc.table_catalog = 'moviesapp'
2023-05-14 22:48:22 info: 18ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'series_seasons' AND tc.table_catalog = 'moviesapp'
2023-05-14 22:48:22 info: 10ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'genres_assoc' AND tc.table_catalog = 'moviesapp'
2023-05-14 22:48:22 info: 6ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'videos_thumbnails' AND tc.table_catalog = 'moviesapp'
2023-05-14 22:48:22 info: 31ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'series_season_videos' AND c.table_schema = 'public'
2023-05-14 22:48:22 info: 6ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'videos' AND tc.table_catalog = 'moviesapp'
2023-05-14 22:48:22 info: 36ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'categories_assoc' AND c.table_schema = 'public'
2023-05-14 22:48:22 info: 43ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'series' AND c.table_schema = 'public'
2023-05-14 22:48:22 info: 12ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'videos_source' AND tc.table_catalog = 'moviesapp'
2023-05-14 22:48:22 info: 28ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'videos_thumbnails' AND c.table_schema = 'public'
2023-05-14 22:48:22 info: 12ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'movies' AND tc.table_catalog = 'moviesapp'
2023-05-14 22:48:22 info: 40ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'genres_assoc' AND c.table_schema = 'public'
2023-05-14 22:48:22 info: 28ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'videos' AND c.table_schema = 'public'
2023-05-14 22:48:22 info: 12ms Executed (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'banners' AND tc.table_catalog = 'moviesapp'
2023-05-14 22:48:22 info: 11ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'admin_users'
2023-05-14 22:48:22 info: 58ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'series_seasons' AND c.table_schema = 'public'
2023-05-14 22:48:22 info: 21ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'banners' AND c.table_schema = 'public'
2023-05-14 22:48:22 info: 11ms Executed (default): ALTER TABLE "series_season_videos" ALTER COLUMN "series_id" SET NOT NULL;ALTER TABLE "series_season_videos" ALTER COLUMN "series_id" DROP DEFAULT;ALTER TABLE "series_season_videos" ALTER COLUMN "series_id" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 12ms Executed (default): ALTER TABLE "categories_assoc" ALTER COLUMN "series_movie_id" SET NOT NULL;ALTER TABLE "categories_assoc" ALTER COLUMN "series_movie_id" DROP DEFAULT;ALTER TABLE "categories_assoc" ALTER COLUMN "series_movie_id" TYPE VARCHAR(40);
2023-05-14 22:48:22 info: 1ms Executed (default): ALTER TABLE "banners" ALTER COLUMN "content_id" SET NOT NULL;ALTER TABLE "banners" ALTER COLUMN "content_id" DROP DEFAULT;ALTER TABLE "banners" ALTER COLUMN "content_id" TYPE VARCHAR(255);
2023-05-14 22:48:22 info: 38ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'videos_source' AND c.table_schema = 'public'
2023-05-14 22:48:22 info: 13ms Executed (default): ALTER TABLE "series" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "series" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "name" TYPE VARCHAR(255);
2023-05-14 22:48:22 info: 12ms Executed (default): ALTER TABLE "videos_thumbnails" ALTER COLUMN "video_id" SET NOT NULL;ALTER TABLE "videos_thumbnails" ALTER COLUMN "video_id" DROP DEFAULT;ALTER TABLE "videos_thumbnails" ALTER COLUMN "video_id" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 36ms Executed (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'movies' AND c.table_schema = 'public'
2023-05-14 22:48:22 info: 14ms Executed (default): ALTER TABLE "genres_assoc" ALTER COLUMN "movies_series_id" SET NOT NULL;ALTER TABLE "genres_assoc" ALTER COLUMN "movies_series_id" DROP DEFAULT;ALTER TABLE "genres_assoc" ALTER COLUMN "movies_series_id" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 13ms Executed (default): ALTER TABLE "videos" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "videos" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "videos" ALTER COLUMN "title" TYPE TEXT;
2023-05-14 22:48:22 info: 12ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "series_id" SET NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "series_id" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "series_id" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 4ms Executed (default): ALTER TABLE "videos_thumbnails" ALTER COLUMN "thumbnail" SET NOT NULL;ALTER TABLE "videos_thumbnails" ALTER COLUMN "thumbnail" DROP DEFAULT;ALTER TABLE "videos_thumbnails" ALTER COLUMN "thumbnail" TYPE VARCHAR(255);
2023-05-14 22:48:22 info: 1ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "season" SET NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "season" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "season" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 18ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'admin_users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 16ms Executed (default): ALTER TABLE "series_season_videos" ALTER COLUMN "season_id" SET NOT NULL;ALTER TABLE "series_season_videos" ALTER COLUMN "season_id" DROP DEFAULT;ALTER TABLE "series_season_videos" ALTER COLUMN "season_id" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 16ms Executed (default): ALTER TABLE "categories_assoc" ALTER COLUMN "category_id" SET NOT NULL;ALTER TABLE "categories_assoc" ALTER COLUMN "category_id" DROP DEFAULT;ALTER TABLE "categories_assoc" ALTER COLUMN "category_id" TYPE VARCHAR(40);
2023-05-14 22:48:22 info: 14ms Executed (default): ALTER TABLE "banners" ALTER COLUMN "url" SET NOT NULL;ALTER TABLE "banners" ALTER COLUMN "url" DROP DEFAULT;ALTER TABLE "banners" ALTER COLUMN "url" TYPE TEXT;
2023-05-14 22:48:22 info: 14ms Executed (default): ALTER TABLE "videos_source" ALTER COLUMN "video_id" SET NOT NULL;ALTER TABLE "videos_source" ALTER COLUMN "video_id" DROP DEFAULT;ALTER TABLE "videos_source" ALTER COLUMN "video_id" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 11ms Executed (default): ALTER TABLE "genres_assoc" ALTER COLUMN "genre_id" DROP NOT NULL;ALTER TABLE "genres_assoc" ALTER COLUMN "genre_id" DROP DEFAULT;ALTER TABLE "genres_assoc" ALTER COLUMN "genre_id" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 14ms Executed (default): ALTER TABLE "series" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "series" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "description" TYPE VARCHAR(500);
2023-05-14 22:48:22 info: 12ms Executed (default): ALTER TABLE "videos" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "videos" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "videos" ALTER COLUMN "description" TYPE TEXT;
2023-05-14 22:48:22 info: 16ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "movies" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "title" TYPE TEXT;
2023-05-14 22:48:22 info: 7ms Executed (default): ALTER TABLE "series_season_videos" ALTER COLUMN "video" SET NOT NULL;ALTER TABLE "series_season_videos" ALTER COLUMN "video" DROP DEFAULT;ALTER TABLE "series_season_videos" ALTER COLUMN "video" TYPE TEXT;
2023-05-14 22:48:22 info: 10ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "description" TYPE VARCHAR(255);
2023-05-14 22:48:22 info: 9ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'session_tokens'
2023-05-14 22:48:22 info: 13ms Executed (default): ALTER TABLE "videos_thumbnails" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "videos_thumbnails" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_videos_thumbnails_status" AS ENUM(''active'', ''inactive'', ''deleted''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "videos_thumbnails" ALTER COLUMN "status" TYPE "public"."enum_videos_thumbnails_status" USING ("status"::"public"."enum_videos_thumbnails_status");
2023-05-14 22:48:22 info: 9ms Executed (default): ALTER TABLE "categories_assoc" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "categories_assoc" ALTER COLUMN "status" SET DEFAULT true;ALTER TABLE "categories_assoc" ALTER COLUMN "status" TYPE BOOLEAN;
2023-05-14 22:48:22 info: 8ms Executed (default): ALTER TABLE "videos_source" ALTER COLUMN "source" SET NOT NULL;ALTER TABLE "videos_source" ALTER COLUMN "source" DROP DEFAULT;ALTER TABLE "videos_source" ALTER COLUMN "source" TYPE TEXT;
2023-05-14 22:48:22 info: 10ms Executed (default): ALTER TABLE "banners" ALTER COLUMN "quality" DROP NOT NULL;ALTER TABLE "banners" ALTER COLUMN "quality" SET DEFAULT 'HD';ALTER TABLE "banners" ALTER COLUMN "quality" TYPE VARCHAR(10);
2023-05-14 22:48:22 info: 10ms Executed (default): ALTER TABLE "genres_assoc" ALTER COLUMN "type" SET NOT NULL;ALTER TABLE "genres_assoc" ALTER COLUMN "type" DROP DEFAULT;ALTER TABLE "genres_assoc" ALTER COLUMN "type" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 11ms Executed (default): ALTER TABLE "series" ALTER COLUMN "image" DROP NOT NULL;ALTER TABLE "series" ALTER COLUMN "image" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "image" TYPE TEXT;
2023-05-14 22:48:22 info: 10ms Executed (default): ALTER TABLE "videos" ALTER COLUMN "tags" SET NOT NULL;ALTER TABLE "videos" ALTER COLUMN "tags" DROP DEFAULT;ALTER TABLE "videos" ALTER COLUMN "tags" TYPE VARCHAR(255);
2023-05-14 22:48:22 info: 1ms Executed (default): ALTER TABLE "series" ALTER COLUMN "trailer" DROP NOT NULL;ALTER TABLE "series" ALTER COLUMN "trailer" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "trailer" TYPE TEXT;
2023-05-14 22:48:22 info: 11ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "image" DROP NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "image" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "image" TYPE TEXT;
2023-05-14 22:48:22 info: 12ms Executed (default): ALTER TABLE "series_season_videos" ALTER COLUMN "status" SET NOT NULL;ALTER TABLE "series_season_videos" ALTER COLUMN "status" SET DEFAULT true;ALTER TABLE "series_season_videos" ALTER COLUMN "status" TYPE BOOLEAN;
2023-05-14 22:48:22 info: 14ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "description" TYPE TEXT;
2023-05-14 22:48:22 info: 9ms Executed (default): ALTER TABLE "categories_assoc" ALTER COLUMN "type" SET NOT NULL;ALTER TABLE "categories_assoc" ALTER COLUMN "type" DROP DEFAULT;ALTER TABLE "categories_assoc" ALTER COLUMN "type" TYPE VARCHAR(30);
2023-05-14 22:48:22 info: 12ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'session_tokens' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 10ms Executed (default): ALTER TABLE "videos_source" ALTER COLUMN "type" DROP NOT NULL;ALTER TABLE "videos_source" ALTER COLUMN "type" DROP DEFAULT;ALTER TABLE "videos_source" ALTER COLUMN "type" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 14ms Executed (default): ALTER TABLE "videos_thumbnails" ALTER COLUMN "quality" DROP NOT NULL;ALTER TABLE "videos_thumbnails" ALTER COLUMN "quality" SET DEFAULT 'default';DO 'BEGIN CREATE TYPE "public"."enum_videos_thumbnails_quality" AS ENUM(''default'', ''medium'', ''high'', ''standard'', ''maxres''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "videos_thumbnails" ALTER COLUMN "quality" TYPE "public"."enum_videos_thumbnails_quality" USING ("quality"::"public"."enum_videos_thumbnails_quality");
2023-05-14 22:48:22 info: 10ms Executed (default): ALTER TABLE "genres_assoc" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "genres_assoc" ALTER COLUMN "status" SET DEFAULT true;ALTER TABLE "genres_assoc" ALTER COLUMN "status" TYPE BOOLEAN;
2023-05-14 22:48:22 info: 8ms Executed (default): ALTER TABLE "series" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "series" ALTER COLUMN "status" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "status" TYPE BOOLEAN;
2023-05-14 22:48:22 info: 13ms Executed (default): ALTER TABLE "banners" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "banners" ALTER COLUMN "status" SET DEFAULT 'active';DO 'BEGIN CREATE TYPE "public"."enum_banners_status" AS ENUM(''active'', ''inactive''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "banners" ALTER COLUMN "status" TYPE "public"."enum_banners_status" USING ("status"::"public"."enum_banners_status");
2023-05-14 22:48:22 info: 8ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "trailer" DROP NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "trailer" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "trailer" TYPE TEXT;
2023-05-14 22:48:22 info: 8ms Executed (default): ALTER TABLE "series_season_videos" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "series_season_videos" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "series_season_videos" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 12ms Executed (default): ALTER TABLE "videos" ALTER COLUMN "status" SET NOT NULL;ALTER TABLE "videos" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_videos_status" AS ENUM(''active'', ''inactive'', ''deleted''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "videos" ALTER COLUMN "status" TYPE "public"."enum_videos_status" USING ("status"::"public"."enum_videos_status");
2023-05-14 22:48:22 info: 9ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "release_date" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "release_date" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "release_date" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 8ms Executed (default): ALTER TABLE "categories_assoc" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "categories_assoc" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "categories_assoc" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 7ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'videos'
2023-05-14 22:48:22 info: 7ms Executed (default): ALTER TABLE "videos_source" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "videos_source" ALTER COLUMN "status" SET DEFAULT 'active';DO 'BEGIN CREATE TYPE "public"."enum_videos_source_status" AS ENUM(''active'', ''inactive'', ''deleted''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "videos_source" ALTER COLUMN "status" TYPE "public"."enum_videos_source_status" USING ("status"::"public"."enum_videos_source_status");
2023-05-14 22:48:22 info: 8ms Executed (default): ALTER TABLE "videos_thumbnails" ALTER COLUMN "language" DROP NOT NULL;ALTER TABLE "videos_thumbnails" ALTER COLUMN "language" DROP DEFAULT;ALTER TABLE "videos_thumbnails" ALTER COLUMN "language" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 9ms Executed (default): ALTER TABLE "genres_assoc" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "genres_assoc" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "genres_assoc" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 9ms Executed (default): ALTER TABLE "series" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "series" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 8ms Executed (default): ALTER TABLE "banners" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "banners" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "banners" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 8ms Executed (default): ALTER TABLE "series_season_videos" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "series_season_videos" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "series_season_videos" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 10ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "status" SET NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "status" SET DEFAULT true;ALTER TABLE "series_seasons" ALTER COLUMN "status" TYPE BOOLEAN;
2023-05-14 22:48:22 info: 7ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "rating" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "rating" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "rating" TYPE FLOAT;
2023-05-14 22:48:22 info: 8ms Executed (default): ALTER TABLE "categories_assoc" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "categories_assoc" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "categories_assoc" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 10ms Executed (default): ALTER TABLE "videos" ALTER COLUMN "views" SET NOT NULL;ALTER TABLE "videos" ALTER COLUMN "views" SET DEFAULT 0;ALTER TABLE "videos" ALTER COLUMN "views" TYPE INTEGER;
2023-05-14 22:48:22 info: 6ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_status' GROUP BY 1
2023-05-14 22:48:22 info: 6ms Executed (default): ALTER TABLE "videos_source" ALTER COLUMN "quality" DROP NOT NULL;ALTER TABLE "videos_source" ALTER COLUMN "quality" SET DEFAULT '720p';ALTER TABLE "videos_source" ALTER COLUMN "quality" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 6ms Executed (default): ALTER TABLE "genres_assoc" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "genres_assoc" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "genres_assoc" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 9ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'videos_thumbnails' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 8ms Executed (default): ALTER TABLE "series" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "series" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "series" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 8ms Executed (default): ALTER TABLE "banners" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "banners" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "banners" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 7ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 8ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "region" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "region" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "region" TYPE VARCHAR(255);
2023-05-14 22:48:22 info: 9ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'series_season_videos' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 7ms Executed (default): ALTER TABLE "videos" ALTER COLUMN "language" SET NOT NULL;ALTER TABLE "videos" ALTER COLUMN "language" DROP DEFAULT;ALTER TABLE "videos" ALTER COLUMN "language" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 8ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'categories_assoc' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 7ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'videos' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 6ms Executed (default): ALTER TABLE "videos_source" ALTER COLUMN "language" DROP NOT NULL;ALTER TABLE "videos_source" ALTER COLUMN "language" SET DEFAULT 'en';ALTER TABLE "videos_source" ALTER COLUMN "language" TYPE VARCHAR(45);
2023-05-14 22:48:22 info: 6ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'genres_assoc' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 6ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'series' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 8ms Executed (default): ALTER TABLE "series_seasons" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "series_seasons" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "series_seasons" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 7ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "language" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "language" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "language" TYPE VARCHAR(255);
2023-05-14 22:48:22 info: 5ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'videos_thumbnails'
2023-05-14 22:48:22 info: 8ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'videos' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 10ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'banners' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 7ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'videos_source' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 3ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'series_seasons' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 3ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "genre" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "genre" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "genre" TYPE VARCHAR(255);
2023-05-14 22:48:22 info: 2ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_thumbnails_status' GROUP BY 1
2023-05-14 22:48:22 info: 3ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_thumbnails_quality' GROUP BY 1
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'videos_thumbnails' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 5ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "status" SET DEFAULT 'active';DO 'BEGIN CREATE TYPE "public"."enum_movies_status" AS ENUM(''active'', ''inactive''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "movies" ALTER COLUMN "status" TYPE "public"."enum_movies_status" USING ("status"::"public"."enum_movies_status");
2023-05-14 22:48:22 info: 4ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'videos_source'
2023-05-14 22:48:22 info: 1ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "video_id" DROP NOT NULL;ALTER TABLE "movies" ALTER COLUMN "video_id" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "video_id" TYPE VARCHAR(255);
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_videos_source_status' GROUP BY 1
2023-05-14 22:48:22 info: 1ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "movies" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 2ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'videos_source' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 2ms Executed (default): ALTER TABLE "movies" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "movies" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "movies" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
2023-05-14 22:48:22 info: 0ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'movies'
2023-05-14 22:48:22 info: 0ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_movies_status' GROUP BY 1
2023-05-14 22:48:22 info: 3ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'movies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 3ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'movies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'series'
2023-05-14 22:48:22 info: 2ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'series' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'series_season_videos'
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'series_season_videos' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'banners'
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_banners_status' GROUP BY 1
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'banners' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'series_seasons'
2023-05-14 22:48:22 info: 2ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'series_seasons' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'categories'
2023-05-14 22:48:22 info: 2ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'categories' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'genres'
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'genres' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 0ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'trailers'
2023-05-14 22:48:22 info: 0ms Executed (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_trailers_quality' GROUP BY 1
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'trailers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 0ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'categories_assoc'
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'categories_assoc' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2023-05-14 22:48:22 info: 1ms Executed (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'genres_assoc'
2023-05-14 22:48:22 info: 2ms Executed (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'genres_assoc' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
