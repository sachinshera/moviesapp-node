{"version":3,"sources":["../../src/middlewares/auth.middleware.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { HttpException } from '@exceptions/HttpException';\nimport { TokenService } from '@/services/token.service';\n\nconst authMiddleware = async (req: Request, res: Response, next: NextFunction) => {\n  try {\n    const Authorization = req.cookies['Authorization'] || (req.header('Authorization') ? req.header('Authorization') : null);\n\n    if (Authorization) {\n      // veryfy token\n      const verifyToken = await TokenService.verifyToken(Authorization);\n      if (verifyToken) {\n        next();\n      } else {\n        next(new HttpException(401, 'Wrong authentication token'));\n      }\n    } else {\n      next(new HttpException(401, 'Wrong authentication token'));\n    }\n  } catch (error) {\n    next(new HttpException(401, 'Wrong authentication token'));\n  }\n};\n\nexport default authMiddleware;\n"],"names":["authMiddleware","req","res","next","Authorization","cookies","header","verifyToken","TokenService","HttpException","error"],"mappings":";;;;+BAwBA;;;eAAA;;;+BAvB8B;8BACD;AAE7B,MAAMA,iBAAiB,OAAOC,KAAcC,KAAeC,OAAuB;IAChF,IAAI;QACF,MAAMC,gBAAgBH,IAAII,OAAO,CAAC,gBAAgB,IAAKJ,CAAAA,IAAIK,MAAM,CAAC,mBAAmBL,IAAIK,MAAM,CAAC,mBAAmB,IAAI,AAAD;QAEtH,IAAIF,eAAe;YAEjB,MAAMG,cAAc,MAAMC,0BAAY,CAACD,WAAW,CAACH;YACnD,IAAIG,aAAa;gBACfJ;YACF,OAAO;gBACLA,KAAK,IAAIM,4BAAa,CAAC,KAAK;YAC9B,CAAC;QACH,OAAO;YACLN,KAAK,IAAIM,4BAAa,CAAC,KAAK;QAC9B,CAAC;IACH,EAAE,OAAOC,OAAO;QACdP,KAAK,IAAIM,4BAAa,CAAC,KAAK;IAC9B;AACF;MAEA,WAAeT"}