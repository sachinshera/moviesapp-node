{"version":3,"sources":["../../../src/models/movies/movies.model.ts"],"sourcesContent":["import { Sequelize, DataTypes, Model, Optional } from 'sequelize';\n\nexport class MoviesModel extends Model {}\n\nexport default function (sequelize: Sequelize) {\n  MoviesModel.init(\n    {\n      id: {\n        unique: true,\n        primaryKey: true,\n        type: DataTypes.STRING(255),\n      },\n      title: {\n        type: DataTypes.TEXT,\n        allowNull: false,\n      },\n      description: {\n        type: DataTypes.TEXT,\n        allowNull: true,\n      },\n      release_date: {\n        type: DataTypes.DATE,\n        allowNull: true,\n      },\n      rating: {\n        type: DataTypes.FLOAT,\n        allowNull: true,\n      },\n      region: {\n        type: DataTypes.STRING(255),\n        allowNull: true,\n      },\n      language: {\n        type: DataTypes.STRING(255),\n        allowNull: true,\n      },\n      genre: {\n        type: DataTypes.STRING(255),\n      },\n      status: {\n        type: DataTypes.ENUM('active', 'inactive'),\n        defaultValue: 'active',\n        allowNull: true,\n      },\n      video_id: {\n        type: DataTypes.STRING(255),\n        allowNull: true,\n        unique: false,\n      },\n    },\n    {\n      tableName: 'movies',\n      sequelize,\n      createdAt: true,\n      updatedAt: true,\n      indexes: [\n        {\n          name: 'movie_title',\n          unique: true,\n          fields: ['title'],\n          type: 'FULLTEXT',\n        },\n        {\n          name: 'movie_description',\n          unique: true,\n          fields: ['description'],\n          type: 'FULLTEXT',\n        },\n      ],\n    },\n  );\n\n  MoviesModel.sync({\n    alter: true,\n  });\n\n  return MoviesModel;\n}\n"],"names":["MoviesModel","Model","sequelize","init","id","unique","primaryKey","type","DataTypes","STRING","title","TEXT","allowNull","description","release_date","DATE","rating","FLOAT","region","language","genre","status","ENUM","defaultValue","video_id","tableName","createdAt","updatedAt","indexes","name","fields","sync","alter"],"mappings":";;;;;;;;;;;IAEaA,WAAW;eAAXA;;IAEb,OAyEC;eAzED;;;2BAJsD;AAE/C,IAAA,AAAMA,cAAN,MAAMA,oBAAoBC,gBAAK;AAAE;AAEzB,SAAf,SAAyBC,SAAoB,EAAE;IAC7CF,YAAYG,IAAI,CACd;QACEC,IAAI;YACFC,QAAQ,IAAI;YACZC,YAAY,IAAI;YAChBC,MAAMC,oBAAS,CAACC,MAAM,CAAC;QACzB;QACAC,OAAO;YACLH,MAAMC,oBAAS,CAACG,IAAI;YACpBC,WAAW,KAAK;QAClB;QACAC,aAAa;YACXN,MAAMC,oBAAS,CAACG,IAAI;YACpBC,WAAW,IAAI;QACjB;QACAE,cAAc;YACZP,MAAMC,oBAAS,CAACO,IAAI;YACpBH,WAAW,IAAI;QACjB;QACAI,QAAQ;YACNT,MAAMC,oBAAS,CAACS,KAAK;YACrBL,WAAW,IAAI;QACjB;QACAM,QAAQ;YACNX,MAAMC,oBAAS,CAACC,MAAM,CAAC;YACvBG,WAAW,IAAI;QACjB;QACAO,UAAU;YACRZ,MAAMC,oBAAS,CAACC,MAAM,CAAC;YACvBG,WAAW,IAAI;QACjB;QACAQ,OAAO;YACLb,MAAMC,oBAAS,CAACC,MAAM,CAAC;QACzB;QACAY,QAAQ;YACNd,MAAMC,oBAAS,CAACc,IAAI,CAAC,UAAU;YAC/BC,cAAc;YACdX,WAAW,IAAI;QACjB;QACAY,UAAU;YACRjB,MAAMC,oBAAS,CAACC,MAAM,CAAC;YACvBG,WAAW,IAAI;YACfP,QAAQ,KAAK;QACf;IACF,GACA;QACEoB,WAAW;QACXvB;QACAwB,WAAW,IAAI;QACfC,WAAW,IAAI;QACfC,SAAS;YACP;gBACEC,MAAM;gBACNxB,QAAQ,IAAI;gBACZyB,QAAQ;oBAAC;iBAAQ;gBACjBvB,MAAM;YACR;YACA;gBACEsB,MAAM;gBACNxB,QAAQ,IAAI;gBACZyB,QAAQ;oBAAC;iBAAc;gBACvBvB,MAAM;YACR;SACD;IACH;IAGFP,YAAY+B,IAAI,CAAC;QACfC,OAAO,IAAI;IACb;IAEA,OAAOhC;AACT"}