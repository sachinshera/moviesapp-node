{"version":3,"sources":["../../src/services/auth.service.ts"],"sourcesContent":["import { compare, hash } from 'bcrypt';\nimport { sign } from 'jsonwebtoken';\nimport { SECRET_KEY } from '@config';\nimport DB from '@databases';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { HttpException } from '@exceptions/HttpException';\nimport { DataStoredInToken, TokenData } from '@interfaces/auth.interface';\nimport { User } from '@interfaces/users.interface';\nimport { isEmpty } from '@utils/util';\n\nclass AuthService {\n  public users = DB.Users;\n\n  public async signup(userData: CreateUserDto): Promise<User> {\n    if (isEmpty(userData)) throw new HttpException(400, 'userData is empty');\n\n    const findUser: User = await this.users.findOne({ where: { email: userData.email } });\n    if (findUser) throw new HttpException(409, `This email ${userData.email} already exists`);\n\n    const hashedPassword = await hash(userData.password, 10);\n    const createUserData: User = await this.users.create({ ...userData, password: hashedPassword });\n\n    return createUserData;\n  }\n\n  public async login(userData: CreateUserDto): Promise<{ cookie: string; findUser: User }> {\n    if (isEmpty(userData)) throw new HttpException(400, 'userData is empty');\n\n    const findUser: User = await this.users.findOne({ where: { email: userData.email } });\n    if (!findUser) throw new HttpException(409, `This email ${userData.email} was not found`);\n\n    const isPasswordMatching: boolean = await compare(userData.password, findUser.password);\n    if (!isPasswordMatching) throw new HttpException(409, 'Password not matching');\n\n    const tokenData = this.createToken(findUser);\n    const cookie = this.createCookie(tokenData);\n\n    return { cookie, findUser };\n  }\n\n  public async logout(userData: User): Promise<User> {\n    if (isEmpty(userData)) throw new HttpException(400, 'userData is empty');\n\n    const findUser: User = await this.users.findOne({ where: { email: userData.email, password: userData.password } });\n    if (!findUser) throw new HttpException(409, \"User doesn't exist\");\n\n    return findUser;\n  }\n\n  public createToken(user: User): TokenData {\n    const dataStoredInToken: DataStoredInToken = { id: user.id };\n    const secretKey: string = SECRET_KEY;\n    const expiresIn: number = 60 * 60;\n\n    return { expiresIn, token: sign(dataStoredInToken, secretKey, { expiresIn }) };\n  }\n\n  public createCookie(tokenData: TokenData): string {\n    return `Authorization=${tokenData.token}; HttpOnly; Max-Age=${tokenData.expiresIn};`;\n  }\n}\n\nexport default AuthService;\n"],"names":["AuthService","signup","userData","isEmpty","HttpException","findUser","users","findOne","where","email","hashedPassword","hash","password","createUserData","create","login","isPasswordMatching","compare","tokenData","createToken","cookie","createCookie","logout","user","dataStoredInToken","id","secretKey","SECRET_KEY","expiresIn","token","sign","DB","Users"],"mappings":";;;;+BA8DA;;;eAAA;;;wBA9D8B;8BACT;wBACM;oDACZ;+BAEe;sBAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAExB,IAAA,AAAMA,cAAN,MAAMA;IAGJ,MAAaC,OAAOC,QAAuB,EAAiB;QAC1D,IAAIC,IAAAA,aAAO,EAACD,WAAW,MAAM,IAAIE,4BAAa,CAAC,KAAK,qBAAqB;QAEzE,MAAMC,WAAiB,MAAM,IAAI,CAACC,KAAK,CAACC,OAAO,CAAC;YAAEC,OAAO;gBAAEC,OAAOP,SAASO,KAAK;YAAC;QAAE;QACnF,IAAIJ,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK,CAAC,WAAW,EAAEF,SAASO,KAAK,CAAC,eAAe,CAAC,EAAE;QAE1F,MAAMC,iBAAiB,MAAMC,IAAAA,YAAI,EAACT,SAASU,QAAQ,EAAE;QACrD,MAAMC,iBAAuB,MAAM,IAAI,CAACP,KAAK,CAACQ,MAAM,CAAC,wCAAKZ;YAAUU,UAAUF;;QAE9E,OAAOG;IACT;IAEA,MAAaE,MAAMb,QAAuB,EAA+C;QACvF,IAAIC,IAAAA,aAAO,EAACD,WAAW,MAAM,IAAIE,4BAAa,CAAC,KAAK,qBAAqB;QAEzE,MAAMC,WAAiB,MAAM,IAAI,CAACC,KAAK,CAACC,OAAO,CAAC;YAAEC,OAAO;gBAAEC,OAAOP,SAASO,KAAK;YAAC;QAAE;QACnF,IAAI,CAACJ,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK,CAAC,WAAW,EAAEF,SAASO,KAAK,CAAC,cAAc,CAAC,EAAE;QAE1F,MAAMO,qBAA8B,MAAMC,IAAAA,eAAO,EAACf,SAASU,QAAQ,EAAEP,SAASO,QAAQ;QACtF,IAAI,CAACI,oBAAoB,MAAM,IAAIZ,4BAAa,CAAC,KAAK,yBAAyB;QAE/E,MAAMc,YAAY,IAAI,CAACC,WAAW,CAACd;QACnC,MAAMe,SAAS,IAAI,CAACC,YAAY,CAACH;QAEjC,OAAO;YAAEE;YAAQf;QAAS;IAC5B;IAEA,MAAaiB,OAAOpB,QAAc,EAAiB;QACjD,IAAIC,IAAAA,aAAO,EAACD,WAAW,MAAM,IAAIE,4BAAa,CAAC,KAAK,qBAAqB;QAEzE,MAAMC,WAAiB,MAAM,IAAI,CAACC,KAAK,CAACC,OAAO,CAAC;YAAEC,OAAO;gBAAEC,OAAOP,SAASO,KAAK;gBAAEG,UAAUV,SAASU,QAAQ;YAAC;QAAE;QAChH,IAAI,CAACP,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK,sBAAsB;QAElE,OAAOC;IACT;IAEOc,YAAYI,IAAU,EAAa;QACxC,MAAMC,oBAAuC;YAAEC,IAAIF,KAAKE,EAAE;QAAC;QAC3D,MAAMC,YAAoBC,kBAAU;QACpC,MAAMC,YAAoB,KAAK;QAE/B,OAAO;YAAEA;YAAWC,OAAOC,IAAAA,kBAAI,EAACN,mBAAmBE,WAAW;gBAAEE;YAAU;QAAG;IAC/E;IAEOP,aAAaH,SAAoB,EAAU;QAChD,OAAO,CAAC,cAAc,EAAEA,UAAUW,KAAK,CAAC,oBAAoB,EAAEX,UAAUU,SAAS,CAAC,CAAC,CAAC;IACtF;;QAhDA,uBAAOtB,SAAQyB,kBAAE,CAACC,KAAK;;AAiDzB;MAEA,WAAehC"}