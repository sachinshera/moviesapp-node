{"version":3,"sources":["../../src/services/token.service.ts"],"sourcesContent":["import { SessionTokenModel } from './../models/session.token.model';\nimport bcrypt from 'bcrypt';\nexport class TokenService {\n  public static async gererateToken(userid: string): Promise<string | boolean> {\n    const hash = bcrypt.hashSync(new Date().getTime().toString(), 10);\n    //  set one day expiry\n    const expire_in = new Date().getTime() + 24 * 60 * 60 * 1000;\n    //  store\n    const create = await SessionTokenModel.create({\n      token: hash,\n      expires_in: expire_in,\n      userId: userid,\n    });\n\n    if (create) {\n      return hash;\n    } else {\n      return false;\n    }\n  }\n\n  public static async verifyToken(token: string): Promise<boolean> {\n    const findToken = await SessionTokenModel.findOne({\n      where: {\n        token: token,\n      },\n    });\n    if (findToken) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // remove token\n\n  public static async removeToken(token: string): Promise<boolean> {\n    const findToken = await SessionTokenModel.destroy({\n      where: {\n        token: token,\n      },\n    });\n\n    if (findToken) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  //   // remove all tokens by user id\n  public static async removeAllTokensByUserId(userid: string): Promise<boolean> {\n    const findToken = await SessionTokenModel.destroy({\n      where: {\n        userId: userid,\n      },\n    });\n\n    if (findToken) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n"],"names":["TokenService","gererateToken","userid","hash","bcrypt","hashSync","Date","getTime","toString","expire_in","create","SessionTokenModel","token","expires_in","userId","verifyToken","findToken","findOne","where","removeToken","destroy","removeAllTokensByUserId"],"mappings":";;;;+BAEaA;;;eAAAA;;;mCAFqB;iDACf;;;;;;AACZ,IAAA,AAAMA,eAAN,MAAMA;IACX,aAAoBC,cAAcC,MAAc,EAA6B;QAC3E,MAAMC,OAAOC,eAAM,CAACC,QAAQ,CAAC,IAAIC,OAAOC,OAAO,GAAGC,QAAQ,IAAI;QAE9D,MAAMC,YAAY,IAAIH,OAAOC,OAAO,KAAK,KAAK,KAAK,KAAK;QAExD,MAAMG,SAAS,MAAMC,oCAAiB,CAACD,MAAM,CAAC;YAC5CE,OAAOT;YACPU,YAAYJ;YACZK,QAAQZ;QACV;QAEA,IAAIQ,QAAQ;YACV,OAAOP;QACT,OAAO;YACL,OAAO,KAAK;QACd,CAAC;IACH;IAEA,aAAoBY,YAAYH,KAAa,EAAoB;QAC/D,MAAMI,YAAY,MAAML,oCAAiB,CAACM,OAAO,CAAC;YAChDC,OAAO;gBACLN,OAAOA;YACT;QACF;QACA,IAAII,WAAW;YACb,OAAO,IAAI;QACb,OAAO;YACL,OAAO,KAAK;QACd,CAAC;IACH;IAIA,aAAoBG,YAAYP,KAAa,EAAoB;QAC/D,MAAMI,YAAY,MAAML,oCAAiB,CAACS,OAAO,CAAC;YAChDF,OAAO;gBACLN,OAAOA;YACT;QACF;QAEA,IAAII,WAAW;YACb,OAAO,IAAI;QACb,OAAO;YACL,OAAO,KAAK;QACd,CAAC;IACH;IAGA,aAAoBK,wBAAwBnB,MAAc,EAAoB;QAC5E,MAAMc,YAAY,MAAML,oCAAiB,CAACS,OAAO,CAAC;YAChDF,OAAO;gBACLJ,QAAQZ;YACV;QACF;QAEA,IAAIc,WAAW;YACb,OAAO,IAAI;QACb,OAAO;YACL,OAAO,KAAK;QACd,CAAC;IACH;AACF"}