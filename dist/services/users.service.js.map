{"version":3,"sources":["../../src/services/users.service.ts"],"sourcesContent":["import { hash } from 'bcrypt';\nimport DB from '@databases';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { HttpException } from '@exceptions/HttpException';\nimport { User } from '@interfaces/users.interface';\nimport { isEmpty } from '@utils/util';\n\nclass UserService {\n  public users = DB.Users;\n\n  public async findAllUser(): Promise<User[]> {\n    const allUser: User[] = await this.users.findAll();\n    return allUser;\n  }\n\n  public async findUserById(userId: number): Promise<User> {\n    if (isEmpty(userId)) throw new HttpException(400, 'UserId is empty');\n\n    const findUser: User = await this.users.findByPk(userId);\n    if (!findUser) throw new HttpException(409, \"User doesn't exist\");\n\n    return findUser;\n  }\n\n  public async createUser(userData: CreateUserDto): Promise<User> {\n    if (isEmpty(userData)) throw new HttpException(400, 'userData is empty');\n\n    const findUser: User = await this.users.findOne({ where: { email: userData.email } });\n    if (findUser) throw new HttpException(409, `This email ${userData.email} already exists`);\n\n    const hashedPassword = await hash(userData.password, 10);\n    const createUserData: User = await this.users.create({ ...userData, password: hashedPassword });\n    return createUserData;\n  }\n\n  public async updateUser(userId: number, userData: CreateUserDto): Promise<User> {\n    if (isEmpty(userData)) throw new HttpException(400, 'userData is empty');\n\n    const findUser: User = await this.users.findByPk(userId);\n    if (!findUser) throw new HttpException(409, \"User doesn't exist\");\n\n    const hashedPassword = await hash(userData.password, 10);\n    await this.users.update({ ...userData, password: hashedPassword }, { where: { id: userId } });\n\n    const updateUser: User = await this.users.findByPk(userId);\n    return updateUser;\n  }\n\n  public async deleteUser(userId: number): Promise<User> {\n    if (isEmpty(userId)) throw new HttpException(400, \"User doesn't existId\");\n\n    const findUser: User = await this.users.findByPk(userId);\n    if (!findUser) throw new HttpException(409, \"User doesn't exist\");\n\n    await this.users.destroy({ where: { id: userId } });\n\n    return findUser;\n  }\n}\n\nexport default UserService;\n"],"names":["UserService","findAllUser","allUser","users","findAll","findUserById","userId","isEmpty","HttpException","findUser","findByPk","createUser","userData","findOne","where","email","hashedPassword","hash","password","createUserData","create","updateUser","update","id","deleteUser","destroy","DB","Users"],"mappings":";;;;+BA4DA;;;eAAA;;;wBA5DqB;oDACN;+BAEe;sBAEN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAExB,IAAA,AAAMA,cAAN,MAAMA;IAGJ,MAAaC,cAA+B;QAC1C,MAAMC,UAAkB,MAAM,IAAI,CAACC,KAAK,CAACC,OAAO;QAChD,OAAOF;IACT;IAEA,MAAaG,aAAaC,MAAc,EAAiB;QACvD,IAAIC,IAAAA,aAAO,EAACD,SAAS,MAAM,IAAIE,4BAAa,CAAC,KAAK,mBAAmB;QAErE,MAAMC,WAAiB,MAAM,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACJ;QACjD,IAAI,CAACG,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK,sBAAsB;QAElE,OAAOC;IACT;IAEA,MAAaE,WAAWC,QAAuB,EAAiB;QAC9D,IAAIL,IAAAA,aAAO,EAACK,WAAW,MAAM,IAAIJ,4BAAa,CAAC,KAAK,qBAAqB;QAEzE,MAAMC,WAAiB,MAAM,IAAI,CAACN,KAAK,CAACU,OAAO,CAAC;YAAEC,OAAO;gBAAEC,OAAOH,SAASG,KAAK;YAAC;QAAE;QACnF,IAAIN,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK,CAAC,WAAW,EAAEI,SAASG,KAAK,CAAC,eAAe,CAAC,EAAE;QAE1F,MAAMC,iBAAiB,MAAMC,IAAAA,YAAI,EAACL,SAASM,QAAQ,EAAE;QACrD,MAAMC,iBAAuB,MAAM,IAAI,CAAChB,KAAK,CAACiB,MAAM,CAAC,wCAAKR;YAAUM,UAAUF;;QAC9E,OAAOG;IACT;IAEA,MAAaE,WAAWf,MAAc,EAAEM,QAAuB,EAAiB;QAC9E,IAAIL,IAAAA,aAAO,EAACK,WAAW,MAAM,IAAIJ,4BAAa,CAAC,KAAK,qBAAqB;QAEzE,MAAMC,WAAiB,MAAM,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACJ;QACjD,IAAI,CAACG,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK,sBAAsB;QAElE,MAAMQ,iBAAiB,MAAMC,IAAAA,YAAI,EAACL,SAASM,QAAQ,EAAE;QACrD,MAAM,IAAI,CAACf,KAAK,CAACmB,MAAM,CAAC,wCAAKV;YAAUM,UAAUF;YAAkB;YAAEF,OAAO;gBAAES,IAAIjB;YAAO;QAAE;QAE3F,MAAMe,aAAmB,MAAM,IAAI,CAAClB,KAAK,CAACO,QAAQ,CAACJ;QACnD,OAAOe;IACT;IAEA,MAAaG,WAAWlB,MAAc,EAAiB;QACrD,IAAIC,IAAAA,aAAO,EAACD,SAAS,MAAM,IAAIE,4BAAa,CAAC,KAAK,wBAAwB;QAE1E,MAAMC,WAAiB,MAAM,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACJ;QACjD,IAAI,CAACG,UAAU,MAAM,IAAID,4BAAa,CAAC,KAAK,sBAAsB;QAElE,MAAM,IAAI,CAACL,KAAK,CAACsB,OAAO,CAAC;YAAEX,OAAO;gBAAES,IAAIjB;YAAO;QAAE;QAEjD,OAAOG;IACT;;QAjDA,uBAAON,SAAQuB,kBAAE,CAACC,KAAK;;AAkDzB;MAEA,WAAe3B"}