{"version":3,"sources":["../../../src/services/videos/videos.source.service.ts"],"sourcesContent":["import { VideosSourceModel } from '@/models/videos/video.souce.model';\nimport { VideosModel } from '@/models/videos/videos.model';\nimport { nanoid } from 'nanoid';\n\nexport class VideosSoureService {\n  public static async addVideosSource(data: any) {\n    // check video is valid or not\n    const checkVideo = await VideosModel.findOne({\n      where: {\n        id: data.videos_id,\n      },\n    });\n    if (!checkVideo) {\n      return 'invalid video id';\n    }\n\n    // check videos source is already exist\n    const checkExist = await VideosSourceModel.findOne({\n      where: {\n        videoId: data.videos_id,\n        source: data.source,\n      },\n    });\n\n    if (checkExist) {\n      return 'videos source already exist';\n    }\n    const videosSource = await VideosSourceModel.create({\n      id: nanoid(),\n      videoId: data.videos_id,\n      source: data.source,\n      type: data.type ? data.type : 'video',\n      status: data.status ? data.status : 'active',\n      quality: data.quality ? data.quality : '720p',\n      language: data.language ? data.language : 'en',\n    });\n    console.log(videosSource);\n    return videosSource;\n  }\n\n  public static async updateVideosSource(id: string, data: any) {\n    const videosSource = await VideosSourceModel.update(\n      {\n        videoId: data.videoId,\n        source: data.source,\n        type: data.type ? data.type : 'video',\n        status: data.status ? data.status : 'active',\n        quality: data.quality ? data.quality : '720p',\n        language: data.language ? data.language : 'en',\n      },\n      {\n        where: {\n          id: id,\n        },\n      },\n    );\n    return videosSource;\n  }\n\n  public static async changeStatusVideosSource(id: string, data: any) {\n    const videosSource = await VideosSourceModel.update(\n      {\n        status: data.status,\n      },\n      {\n        where: {\n          id: id,\n        },\n      },\n    );\n    return videosSource;\n  }\n\n  public static async getVideosSourceByVideoId(id: string) {\n    const videosSource = await VideosSourceModel.findAll({\n      where: {\n        video_id: id,\n      },\n    });\n    return videosSource;\n  }\n\n  public static async getSourceById(id: string) {\n    const source = await VideosSourceModel.findOne({\n      where: {\n        id: id,\n      },\n    });\n    return source;\n  }\n\n  public static async deleteVideosSource(id: string) {\n    const videosSource = await VideosSourceModel.destroy({\n      where: {\n        id: id,\n      },\n    });\n    return videosSource;\n  }\n}\n"],"names":["VideosSoureService","addVideosSource","data","checkVideo","VideosModel","findOne","where","id","videos_id","checkExist","VideosSourceModel","videoId","source","videosSource","create","nanoid","type","status","quality","language","console","log","updateVideosSource","update","changeStatusVideosSource","getVideosSourceByVideoId","findAll","video_id","getSourceById","deleteVideosSource","destroy"],"mappings":";;;;+BAIaA;;;eAAAA;;;iCAJqB;6BACN;wBACL;AAEhB,IAAA,AAAMA,qBAAN,MAAMA;IACX,aAAoBC,gBAAgBC,IAAS,EAAE;QAE7C,MAAMC,aAAa,MAAMC,wBAAW,CAACC,OAAO,CAAC;YAC3CC,OAAO;gBACLC,IAAIL,KAAKM,SAAS;YACpB;QACF;QACA,IAAI,CAACL,YAAY;YACf,OAAO;QACT,CAAC;QAGD,MAAMM,aAAa,MAAMC,kCAAiB,CAACL,OAAO,CAAC;YACjDC,OAAO;gBACLK,SAAST,KAAKM,SAAS;gBACvBI,QAAQV,KAAKU,MAAM;YACrB;QACF;QAEA,IAAIH,YAAY;YACd,OAAO;QACT,CAAC;QACD,MAAMI,eAAe,MAAMH,kCAAiB,CAACI,MAAM,CAAC;YAClDP,IAAIQ,IAAAA,cAAM;YACVJ,SAAST,KAAKM,SAAS;YACvBI,QAAQV,KAAKU,MAAM;YACnBI,MAAMd,KAAKc,IAAI,GAAGd,KAAKc,IAAI,GAAG,OAAO;YACrCC,QAAQf,KAAKe,MAAM,GAAGf,KAAKe,MAAM,GAAG,QAAQ;YAC5CC,SAAShB,KAAKgB,OAAO,GAAGhB,KAAKgB,OAAO,GAAG,MAAM;YAC7CC,UAAUjB,KAAKiB,QAAQ,GAAGjB,KAAKiB,QAAQ,GAAG,IAAI;QAChD;QACAC,QAAQC,GAAG,CAACR;QACZ,OAAOA;IACT;IAEA,aAAoBS,mBAAmBf,EAAU,EAAEL,IAAS,EAAE;QAC5D,MAAMW,eAAe,MAAMH,kCAAiB,CAACa,MAAM,CACjD;YACEZ,SAAST,KAAKS,OAAO;YACrBC,QAAQV,KAAKU,MAAM;YACnBI,MAAMd,KAAKc,IAAI,GAAGd,KAAKc,IAAI,GAAG,OAAO;YACrCC,QAAQf,KAAKe,MAAM,GAAGf,KAAKe,MAAM,GAAG,QAAQ;YAC5CC,SAAShB,KAAKgB,OAAO,GAAGhB,KAAKgB,OAAO,GAAG,MAAM;YAC7CC,UAAUjB,KAAKiB,QAAQ,GAAGjB,KAAKiB,QAAQ,GAAG,IAAI;QAChD,GACA;YACEb,OAAO;gBACLC,IAAIA;YACN;QACF;QAEF,OAAOM;IACT;IAEA,aAAoBW,yBAAyBjB,EAAU,EAAEL,IAAS,EAAE;QAClE,MAAMW,eAAe,MAAMH,kCAAiB,CAACa,MAAM,CACjD;YACEN,QAAQf,KAAKe,MAAM;QACrB,GACA;YACEX,OAAO;gBACLC,IAAIA;YACN;QACF;QAEF,OAAOM;IACT;IAEA,aAAoBY,yBAAyBlB,EAAU,EAAE;QACvD,MAAMM,eAAe,MAAMH,kCAAiB,CAACgB,OAAO,CAAC;YACnDpB,OAAO;gBACLqB,UAAUpB;YACZ;QACF;QACA,OAAOM;IACT;IAEA,aAAoBe,cAAcrB,EAAU,EAAE;QAC5C,MAAMK,SAAS,MAAMF,kCAAiB,CAACL,OAAO,CAAC;YAC7CC,OAAO;gBACLC,IAAIA;YACN;QACF;QACA,OAAOK;IACT;IAEA,aAAoBiB,mBAAmBtB,EAAU,EAAE;QACjD,MAAMM,eAAe,MAAMH,kCAAiB,CAACoB,OAAO,CAAC;YACnDxB,OAAO;gBACLC,IAAIA;YACN;QACF;QACA,OAAOM;IACT;AACF"}