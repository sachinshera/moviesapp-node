{"version":3,"sources":["../../../src/services/videos/videos.thumbnail.service.ts"],"sourcesContent":["import { VideosModel } from '@/models/videos/videos.model';\nimport { VideosThumbnailsModel } from '@/models/videos/videos.thumnails.model';\nimport { nanoid } from 'nanoid';\nexport default class VideosThumbnailsService {\n  // add new video thumbnail\n  public static async addVideoThumbnail(data: any) {\n    const video = await VideosModel.findOne({\n      where: {\n        id: data.video_id,\n      },\n    });\n    if (video) {\n      // check exist thumbnail\n      const existThumbnail = await VideosThumbnailsModel.findOne({\n        where: {\n          videoId: data.video_id,\n          thumbnail: data.thumbnail,\n        },\n      });\n\n      if (existThumbnail) {\n        throw new Error('Thumbnail already exist');\n      }\n      const videoThumbnail = await VideosThumbnailsModel.create({\n        id: nanoid(),\n        videoId: data.video_id,\n        status: data.status ? data.status.status : 'active',\n        ...data,\n      });\n      return videoThumbnail;\n    } else {\n      throw new Error('Video not found');\n    }\n  }\n\n  //   get all video thumbnails by video id\n  public static async getVideoThumbnails(videoId: string) {\n    const video = await VideosModel.findOne({\n      where: {\n        id: videoId,\n      },\n    });\n    if (video) {\n      const videoThumbnails = await VideosThumbnailsModel.findAll({\n        where: {\n          videoId: videoId,\n        },\n      });\n      return videoThumbnails;\n    } else {\n      //   throw error as json\n      throw new Error('Video not found');\n    }\n  }\n\n  //   get thumbnail by id\n  public static async getVideoThumbnailById(id: string) {\n    const videoThumbnail = await VideosThumbnailsModel.findOne({\n      where: {\n        id: id,\n      },\n    });\n    return videoThumbnail;\n  }\n\n  //   delete video thumbnail by id\n\n  public static async deleteVideoThumbnailById(id: string) {\n    const videoThumbnail = await VideosThumbnailsModel.findOne({\n      where: {\n        id: id,\n      },\n    });\n    if (videoThumbnail) {\n      await VideosThumbnailsModel.destroy({\n        where: {\n          id: id,\n        },\n      });\n      return videoThumbnail;\n    } else {\n      throw new Error('Video thumbnail not found');\n    }\n  }\n  //   update video thumbnail by id\n  public static async updateVideoThumbnailById(id: string, data: any) {\n    const videoThumbnail = await VideosThumbnailsModel.findOne({\n      where: {\n        id: id,\n      },\n    });\n    if (videoThumbnail) {\n      await VideosThumbnailsModel.update(\n        {\n          ...data,\n        },\n        {\n          where: {\n            id: id,\n          },\n        },\n      );\n      return videoThumbnail;\n    } else {\n      throw new Error('Video thumbnail not found');\n    }\n  }\n}\n"],"names":["VideosThumbnailsService","addVideoThumbnail","data","video","VideosModel","findOne","where","id","video_id","existThumbnail","VideosThumbnailsModel","videoId","thumbnail","Error","videoThumbnail","create","nanoid","status","getVideoThumbnails","videoThumbnails","findAll","getVideoThumbnailById","deleteVideoThumbnailById","destroy","updateVideoThumbnailById","update"],"mappings":";;;;;;;eAGqBA;;;6BAHO;sCACU;wBACf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACR,IAAA,AAAMA,0BAAN,MAAMA;IAEnB,aAAoBC,kBAAkBC,IAAS,EAAE;QAC/C,MAAMC,QAAQ,MAAMC,wBAAW,CAACC,OAAO,CAAC;YACtCC,OAAO;gBACLC,IAAIL,KAAKM,QAAQ;YACnB;QACF;QACA,IAAIL,OAAO;YAET,MAAMM,iBAAiB,MAAMC,2CAAqB,CAACL,OAAO,CAAC;gBACzDC,OAAO;oBACLK,SAAST,KAAKM,QAAQ;oBACtBI,WAAWV,KAAKU,SAAS;gBAC3B;YACF;YAEA,IAAIH,gBAAgB;gBAClB,MAAM,IAAII,MAAM,2BAA2B;YAC7C,CAAC;YACD,MAAMC,iBAAiB,MAAMJ,2CAAqB,CAACK,MAAM,CAAC;gBACxDR,IAAIS,IAAAA,cAAM;gBACVL,SAAST,KAAKM,QAAQ;gBACtBS,QAAQf,KAAKe,MAAM,GAAGf,KAAKe,MAAM,CAACA,MAAM,GAAG,QAAQ;eAChDf;YAEL,OAAOY;QACT,OAAO;YACL,MAAM,IAAID,MAAM,mBAAmB;QACrC,CAAC;IACH;IAGA,aAAoBK,mBAAmBP,OAAe,EAAE;QACtD,MAAMR,QAAQ,MAAMC,wBAAW,CAACC,OAAO,CAAC;YACtCC,OAAO;gBACLC,IAAII;YACN;QACF;QACA,IAAIR,OAAO;YACT,MAAMgB,kBAAkB,MAAMT,2CAAqB,CAACU,OAAO,CAAC;gBAC1Dd,OAAO;oBACLK,SAASA;gBACX;YACF;YACA,OAAOQ;QACT,OAAO;YAEL,MAAM,IAAIN,MAAM,mBAAmB;QACrC,CAAC;IACH;IAGA,aAAoBQ,sBAAsBd,EAAU,EAAE;QACpD,MAAMO,iBAAiB,MAAMJ,2CAAqB,CAACL,OAAO,CAAC;YACzDC,OAAO;gBACLC,IAAIA;YACN;QACF;QACA,OAAOO;IACT;IAIA,aAAoBQ,yBAAyBf,EAAU,EAAE;QACvD,MAAMO,iBAAiB,MAAMJ,2CAAqB,CAACL,OAAO,CAAC;YACzDC,OAAO;gBACLC,IAAIA;YACN;QACF;QACA,IAAIO,gBAAgB;YAClB,MAAMJ,2CAAqB,CAACa,OAAO,CAAC;gBAClCjB,OAAO;oBACLC,IAAIA;gBACN;YACF;YACA,OAAOO;QACT,OAAO;YACL,MAAM,IAAID,MAAM,6BAA6B;QAC/C,CAAC;IACH;IAEA,aAAoBW,yBAAyBjB,EAAU,EAAEL,IAAS,EAAE;QAClE,MAAMY,iBAAiB,MAAMJ,2CAAqB,CAACL,OAAO,CAAC;YACzDC,OAAO;gBACLC,IAAIA;YACN;QACF;QACA,IAAIO,gBAAgB;YAClB,MAAMJ,2CAAqB,CAACe,MAAM,CAChC,mBACKvB,OAEL;gBACEI,OAAO;oBACLC,IAAIA;gBACN;YACF;YAEF,OAAOO;QACT,OAAO;YACL,MAAM,IAAID,MAAM,6BAA6B;QAC/C,CAAC;IACH;AACF"}